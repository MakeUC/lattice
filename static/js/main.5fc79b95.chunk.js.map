{"version":3,"sources":["services/Api.js","services/AuthService.js","services/PushService.js","providers/AuthProvider.js","services/ProfileService.js","providers/ProfileProvider.js","services/MatchService.js","providers/ProfileListProvider.js","providers/MatchProvider.js","services/NotificationService.js","providers/NotificationProvider.js","providers/LatticeThemeProvider.js","layout/Providers.js","components/Spinner.js","pages/auth/Register.js","components/DialogControl.hook.js","pages/auth/dialogs/reset-request.js","pages/auth/dialogs/reset-request-alert.js","pages/auth/Login.js","tours/TourComponent.js","tours/NotificationTour.js","pages/notifications/dialogs/notification-details.js","pages/notifications/Notifications.js","components/PromiseButton.js","tours/ProfileTour.js","pages/profile/dialogs/toggle-visibility-confirmation.js","pages/profile/dialogs/toggle-visibility-alert.js","pages/profile/dialogs/change-password.js","pages/profile/dialogs/change-password-alert.js","pages/profile/dialogs/logout-confirmation.js","pages/profile/Profile.js","pages/profile/dialogs/profile-save-confirmation.js","pages/profile/ChangeProfile.js","tours/HomeTour.js","tours/ResetTour.js","pages/home/Card.js","pages/home/Deck.js","pages/home/Home.js","pages/auth/dialogs/reset-alert.js","pages/auth/Reset.js","layout/AuthRoute.js","layout/Navigation.js","layout/AppRoute.js","layout/Routes.js","layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["apiHost","apiUrl","getRegistrantEmail","id","Axios","url","method","res","data","Error","response","message","register","registrantId","password","login","email","changePassword","token","oldPassword","newPassword","headers","Authorization","sendResetLink","getResetInfo","resetToken","resetPassword","urlB64ToUint8Array","base64String","base64","repeat","length","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","getSubscription","a","navigator","serviceWorker","ready","registration","pushManager","applicationServerKey","options","userVisibleOnly","subscribe","removeSubscription","subscription","unsubscribe","requestPermission","window","Notification","sub","context","createContext","logout","AuthProvider","children","useState","setToken","useEffect","localStorage","getItem","PushService","setItem","console","error","AuthService","contextValue","removeItem","Provider","value","useAuth","useContext","getProfiles","getProfile","startProfile","updateProfile","profile","setVisible","visible","getSkills","completeTour","tour","isLoading","failedToLoad","toggleVisibility","ProfileProvider","setLoading","setFailedToLoad","setProfile","useCallback","ProfileService","started","newProfile","useProfile","swipe","match","reset","skills","profiles","ProfileListProvider","setSkills","setProfiles","useProfileList","swipeProfile","MatchProvider","swipedProfiles","setSwipedProfiles","to","includes","MatchService","swiped","useMatch","getNotifications","readNotifications","notifications","pushPermission","requestNotificationPermission","NotificationProvider","setPushPermission","setNotifications","NotificationService","filter","notification","read","map","permission","useNotification","theme","createMuiTheme","palette","primary","main","LatticeThemeProvider","ThemeProvider","size","src","alt","style","width","height","useStyles","makeStyles","margin","spacing","classes","useParams","setEmail","errors","setErrors","isSubmitting","setSubmitting","failedToSubmit","setFailedToSubmit","redirect","setRedirect","onSubmit","e","preventDefault","target","confirmPassword","Container","className","root","Box","color","textAlign","Grid","container","alignItems","item","TextField","name","type","fullWidth","variant","disabled","Button","defaultShow","show","setShow","state","setState","open","dismiss","onClose","onSuccess","useForm","handleSubmit","Dialog","DialogTitle","DialogContent","autoFocus","label","inputRef","required","helperText","DialogActions","onClick","DialogContentText","InputWithIcon","resetRequestDialog","useDialogControl","resetRequestAlertDialog","requestReset","m","href","steps","isOpen","setOpen","onTourComplete","completedTours","onRequestClose","TourComponent","selector","content","matchedUser","idea","lookingFor","slack","skillRows","slice","marginTop","marginLeft","marginRight","marginBottom","borderRadius","paddingBottom","fontSize","row","index","key","padding","display","skill","title","icon","look","NotificationTour","action","maxWidth","snackbar","backgroundColor","fontFamily","dialogControl","openNotification","setOpenNotification","TextBox","SnackbarContent","profileSkills","profileLookingFor","hydratedProfile","openNotificationDetails","props","waiting","setWaiting","_onClick","PromiseButton","getValues","minLength","validate","confirm","confirmNewPassword","toggleVisibilityConfirmationDialog","toggleVisibilityAlertDialog","changePasswordDialog","changePasswordAlertDialog","logoutConfirmationDialog","onToggleVisibility","onPasswordChange","onLogout","ProfileTour","setValue","watch","showConfirmationModal","setShowModal","Object","keys","s","onModalDismiss","placeholder","multiline","maxLength","AssignmentTurnedIn","Autocomplete","multiple","filterSelectedOptions","getOptionLabel","option","renderInput","params","onChange","InputProps","startAdornment","InputAdornment","position","Card","x","y","rot","scale","trans","bind","div","transform","interpolate","boxShadow","opacity","Math","abs","r","Deck","Set","gone","useSprings","random","delay","from","set","onSwipe","direction","onFinish","log","useGesture","args","down","xDelta","delta","xDir","distance","velocity","dir","swipePromise","then","add","isGone","has","innerWidth","undefined","config","friction","tension","profileState","profileListState","hydratedProfiles","setHydratedProfiles","LoadingText","SetupText","ResetText","ErrorText","HomeTour","completed","ResetTour","resetAlertDialog","NavAction","navigate","rest","BottomNavigationAction","BottomNavigation","NotificationAction","unreadCount","setUnreadCount","Badge","badgeContent","basename","path","AuthRoute","Register","Reset","AppRoute","Notifications","ChangeProfile","Home","Providers","Routes","App","Layout","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onRegister","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5fc79b95.chunk.js","sourcesContent":["const env = process.env.NODE_ENV;\n\nexport const apiHost =\n  (env === `development`) ?\n    `http://localhost:3000` :\n    `https://makeuc-registration-dev.herokuapp.com`;\n","import Axios from 'axios';\nimport { apiHost } from './Api';\n\nconst apiUrl = `${apiHost}/auth`;\n\nexport default {\n\n  async getRegistrantEmail(id) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/email/${id}`,\n        method: `GET`\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message || `Cannot reach server, please try again later`);\n    }\n  },\n\n  async register(registrantId, password) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/register`,\n        method: `POST`,\n        data: { registrantId, password }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message || `Cannot reach server, please try again later`);\n    }\n  },\n\n  async login(email, password) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/login`,\n        method: `POST`,\n        data: { email, password }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response?.data.message || `Cannot reach server, please try again later`);\n    }\n  },\n\n  async changePassword({ token, oldPassword, newPassword }) {\n    try {\n      await Axios({\n        url: `${apiUrl}/password`,\n        method: `PUT`,\n        data: { oldPassword, newPassword },\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return;\n    } catch (err) {\n      throw new Error(err.response?.data.message || `Cannot reach server, please try again later`);\n    }\n  },\n\n  async sendResetLink(email) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/reset`,\n        method: `POST`,\n        data: { email }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message || `Cannot reach server, please try again later`);\n    }\n  },\n\n  async getResetInfo(resetToken) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/reset/${resetToken}`,\n        method: `GET`\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message || `Cannot reach server, please try again later`);\n    }\n  },\n\n  async resetPassword(resetToken, password) {\n    try {\n      await Axios({\n        url: `${apiUrl}/reset`,\n        method: `PUT`,\n        data: { resetToken, password }\n      });\n  \n      return;\n    } catch (err) {\n      throw new Error(err.response.data.message || `Cannot reach server, please try again later`);\n    }\n  }\n};","import Axios from 'axios';\nimport { apiHost } from './Api';\n\nconst apiUrl = `${apiHost}/notification`;\n\nconst urlB64ToUint8Array = base64String => {\n  const padding = `=`.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding).replace(/-/g, `+`).replace(/_/g, `/`);\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length)\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  };\n  return outputArray;\n};\n\nconst getSubscription = async () => {\n  const registration = await navigator.serviceWorker.ready;\n\n  const existing = await registration.pushManager.getSubscription();\n  if(existing) throw new Error(`Push subscription already exists`);\n\n  const applicationServerKey = urlB64ToUint8Array(\n    `BBZjBy7vm7QXjZGm8FefmDDFahC2hZOTNMGeJTH1tO1ZT4Rji6wMSBEKzxg8HML4PozPQYRF1ga8EqLFGFDCl0E`\n  )\n  const options = { applicationServerKey, userVisibleOnly: true }\n  return registration.pushManager.subscribe(options);\n};\n\nconst removeSubscription = async () => {\n  const registration = await navigator.serviceWorker.ready;\n\n  const subscription = await registration.pushManager.getSubscription();\n  if(!subscription) throw new Error(`Push subscription does not exist`);\n\n  return subscription.unsubscribe();\n};\n\nexport default {\n  requestPermission() {\n    return window.Notification.requestPermission();\n  },\n  async subscribe({ token }) {\n    try {\n      const sub = await getSubscription();\n\n      const res = await Axios({\n        url: `${apiUrl}/subscribe`,\n        method: `POST`,\n        data: sub,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return res.data;\n    } catch(err) {\n      throw new Error(err.response?.data?.message || err.message);\n    }\n  },\n  async unsubscribe({ token, id }) {\n    try {\n      await removeSubscription();\n  \n      await Axios({\n        url: `${apiUrl}/subscribe/${id}`,\n        method: `DELETE`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return;\n    } catch(err) {\n      throw new Error(err.response?.data?.message || err.message);\n    }\n  }\n};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport AuthService from '../services/AuthService';\nimport PushService from '../services/PushService';\n\nconst tokenStorageKey = `lattice-token`;\nconst subscriptionStorageKey = `push-subscription-id`;\n\nconst context = createContext({ \n  token: ``, \n  email: ``, \n  getRegistrantEmail() {}, \n  register() {},\n  login() {},\n  logout() {},\n  changePassword() {},\n  sendResetLink() {},\n  getResetInfo() {},\n  resetPassword() {}\n});\n\nexport function AuthProvider({ children }) {\n  const [ token, setToken ] = useState(``);\n\n  useEffect(() => {\n    const token = localStorage.getItem(tokenStorageKey);\n    setToken(token);\n  }, []);\n\n  useEffect(() => {\n    (async function() {\n      try {\n        if(!token) return;\n\n        const id = localStorage.getItem(subscriptionStorageKey);\n        if(id) return;\n\n        const subscription = await PushService.subscribe({ token });\n        localStorage.setItem(subscriptionStorageKey, subscription.id);\n      } catch(err) {\n        console.error(err);\n      }\n    })();\n  }, [ token ]);\n\n  const getRegistrantEmail = registrantId => AuthService.getRegistrantEmail(registrantId);\n\n  const register = async (registrantId, password) => {\n    const token = await AuthService.register(registrantId, password);\n    localStorage.setItem(tokenStorageKey, token);\n    setToken(token);\n  };\n\n  const login = async (email, password) => {\n    const token = await AuthService.login(email, password);\n    localStorage.setItem(tokenStorageKey, token);\n    setToken(token);\n  };\n\n  const logout = async () => {\n    try {\n      localStorage.removeItem(tokenStorageKey);\n      setToken(null);\n\n      const id = localStorage.getItem(subscriptionStorageKey);\n      await PushService.unsubscribe({ token, id });\n      localStorage.removeItem(subscriptionStorageKey);\n    } catch(err) {\n      console.error(err);\n    }\n  };\n\n  const changePassword = ({ oldPassword, newPassword }) => AuthService.changePassword({ token, oldPassword, newPassword });\n\n  const sendResetLink = email => AuthService.sendResetLink(email);\n\n  const getResetInfo = resetToken => AuthService.getResetInfo(resetToken);\n\n  const resetPassword = (resetToken, password) => AuthService.resetPassword(resetToken, password);\n\n  const contextValue = {\n    token, getRegistrantEmail, register, login,\n    logout, changePassword, sendResetLink, getResetInfo, resetPassword\n  };\n\n  return <context.Provider value={contextValue}>{children}</context.Provider>;\n};\n\nexport const useAuth = () => useContext(context);\n","import Axios from 'axios';\nimport { apiHost } from './Api';\n\nconst apiUrl = `${apiHost}/profile`;\n\nexport default {\n  async getProfiles({ token }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/list`,\n        method: `GET`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async getProfile({ token }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/`,\n        method: `GET`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async startProfile({ token }) {\n    try {\n      await Axios({\n        url: `${apiUrl}/start`,\n        method: `POST`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async updateProfile({ token, profile }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/`,\n        method: `PUT`,\n        data: profile,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async setVisible({ token, visible }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/visible`,\n        method: `PUT`,\n        data: { visible },\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async getSkills({ token }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/skills`,\n        method: `GET`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async completeTour({ token, tour }) {\n    try {\n      await Axios({\n        url: `${apiUrl}/tour/${tour}`,\n        method: `POST`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  }\n};","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport ProfileService from '../services/ProfileService';\nimport { useAuth } from './AuthProvider';\n\nconst context = createContext({\n  isLoading: true, failedToLoad: null, profile: {},\n  getProfile() {}, updateProfile() {}, toggleVisibility() {}, completeTour() {}\n});\n\nexport function ProfileProvider({ children }) {\n  const { token } = useAuth();\n\n  const [ isLoading, setLoading ] = useState(true);\n  const [ failedToLoad, setFailedToLoad ] = useState(null);\n  const [ profile, setProfile ] = useState({});\n\n  const getProfile = useCallback(async () => {\n    try {\n      setLoading(true);\n      setFailedToLoad(null);\n\n      const profile = await ProfileService.getProfile({ token });\n\n      setProfile(profile);\n\n      if(!profile.started) {\n        ProfileService.startProfile({ token });\n      }\n    } catch (err) {\n      setFailedToLoad(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [ token ]);\n\n  useEffect(() => {\n    token && getProfile();\n  }, [ token, getProfile ]);\n\n  const updateProfile = async profile => {\n    const newProfile = await ProfileService.updateProfile({ token, profile });\n    setProfile(newProfile);\n  };\n\n  const toggleVisibility = async () => {\n    const newProfile = await ProfileService.setVisible({ token, visible: !profile.visible });\n    setProfile(newProfile);\n  };\n\n  const completeTour = async tour => {\n    try {\n      await ProfileService.completeTour({ token, tour });\n      await getProfile();\n    } catch(err) {\n      console.error(err);\n    }\n  };\n\n  const contextValue = {\n    isLoading, failedToLoad, profile,\n    getProfile, updateProfile, toggleVisibility, completeTour\n  };\n\n  return <context.Provider value={contextValue}>{children}</context.Provider>;\n};\n\nexport const useProfile = () => useContext(context);\n","import Axios from 'axios';\nimport { apiHost } from './Api';\n\nconst apiUrl = `${apiHost}/match`;\n\nexport default {\n  async swipe({ token, match }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}`,\n        method: `POST`,\n        data: match,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n  async reset({ token }) {\n    try {\n      await Axios({\n        url: `${apiUrl}`,\n        method: `DELETE`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  }\n};","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport ProfileService from '../services/ProfileService';\nimport { useAuth } from './AuthProvider';\nimport { useProfile } from './ProfileProvider';\n\nconst context = createContext({\n  isLoading: true, failedToLoad: null,\n  skills: [], profiles: [],\n  getSkills() {}, getProfiles() {}\n});\n\nexport function ProfileListProvider({ children }) {\n  const { token } = useAuth();\n  const { profile } = useProfile();\n\n  const [ isLoading, setLoading ] = useState(false);\n  const [ failedToLoad, setFailedToLoad ] = useState(null);\n  const [ skills, setSkills ] = useState([]);\n\n  const [ profiles, setProfiles ] = useState([]);\n\n  const getSkills = useCallback(async () => {\n    try {\n      const skills = await ProfileService.getSkills({ token });\n      setSkills(skills);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [ token ]);\n\n  const getProfiles = useCallback(async () => {\n    if(!profile?.visible) return;\n    try {\n      setLoading(true);\n      setFailedToLoad(null);\n\n      const profiles = await ProfileService.getProfiles({ token });\n\n      setProfiles(profiles);\n    } catch (err) {\n      setFailedToLoad(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [ profile.visible, token ]);\n\n  useEffect(() => {\n    token && getSkills();\n  }, [ token, getSkills ]);\n\n  useEffect(() => {\n    token && getProfiles();\n  }, [ token, getProfiles ]);\n\n  const contextValue = {\n    isLoading, failedToLoad,\n    skills, profiles,\n    getSkills, getProfiles\n  };\n\n  return <context.Provider value={contextValue}>{children}</context.Provider>;\n};\n\nexport const useProfileList = () => useContext(context);\n","import React, { createContext, useContext, useState } from 'react';\nimport MatchService from '../services/MatchService';\nimport { useAuth } from './AuthProvider';\nimport { useProfileList } from './ProfileListProvider';\n\nconst context = createContext({\n  swipeProfile() {}, reset() {}\n});\n\nexport function MatchProvider({ children }) {\n  const { token } = useAuth();\n  const { getProfiles } = useProfileList()\n\n  const [ swipedProfiles, setSwipedProfiles ] = useState([]);\n\n  const swipeProfile = async (to, match) => {\n    if(swipedProfiles.includes(to.id)) return;\n\n    await MatchService.swipe({ token, match: { to: to.id, match } });\n    setSwipedProfiles(swiped => [ ...swiped, to.id ]);\n  };\n\n  const reset = async () => {\n    await MatchService.reset({ token });\n    setSwipedProfiles([]);\n    await getProfiles();\n  };\n\n  const contextValue = {\n    swipeProfile, reset\n  };\n\n  return <context.Provider value={contextValue}>{children}</context.Provider>;\n};\n\nexport const useMatch = () => useContext(context);\n","import Axios from 'axios';\nimport { apiHost } from './Api';\n\nconst apiUrl = `${apiHost}/notification`;\n\nexport default {\n  async getNotifications({ token }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}`,\n        method: `GET`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n  async readNotifications({ token }) {\n    try {\n      await Axios({\n        url: `${apiUrl}/read`,\n        method: `POST`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  }\n};","import React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport NotificationService from '../services/NotificationService';\nimport PushService from '../services/PushService';\nimport { useAuth } from './AuthProvider';\n\nconst context = createContext({\n  isLoading: false, failedToLoad: null, notifications: [], pushPermission: `default`,\n  getNotifications() {}, readNotifications() {}, requestNotificationPermission() {}\n});\n\nexport function NotificationProvider({ children }) {\n  const { token } = useAuth();\n\n  const [ pushPermission, setPushPermission ] = useState(`default`);\n  const [ isLoading, setLoading ] = useState(true);\n  const [ failedToLoad, setFailedToLoad ] = useState(null);\n  const [ notifications, setNotifications ] = useState([]);\n\n  const getNotifications = useCallback(async () => {\n    if(!token) return;\n    \n    try {\n      setLoading(true);\n      setFailedToLoad(null);\n\n      const notifications = await NotificationService.getNotifications({ token });\n\n      setNotifications(notifications);\n    } catch (err) {\n      setFailedToLoad(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [ token ]);\n\n  useEffect(() => {\n    getNotifications();\n  }, [ getNotifications ]);\n\n  const readNotifications = async () => {\n    if(!token) return;\n\n    const unreadCount = notifications.filter(({ notification: { read } }) => !read).length;\n    if(!unreadCount) return;\n    \n    try {\n      await NotificationService.readNotifications({ token });\n      setNotifications(\n        notifications => notifications.map(\n          notification => ({ ...notification, read: true })\n        )\n      );\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const requestNotificationPermission = async () => {\n    if(!token) return;\n\n    const permission = await PushService.requestPermission();\n    setPushPermission(permission);\n  }\n\n  useEffect(() => {\n    requestNotificationPermission();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ token ]);\n\n  const contextValue = {\n    isLoading, failedToLoad, notifications, pushPermission,\n    getNotifications, readNotifications, requestNotificationPermission\n  };\n\n  return <context.Provider value={contextValue}>{children}</context.Provider>;\n};\n\nexport const useNotification = () => useContext(context);\n","import React from 'react';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: { \n    primary: {\n      main: `rgb(129,116,255)`\n    }\n  }\n});\n\nexport function LatticeThemeProvider({ children }) {\n  return  <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n","import React from 'react';\nimport { AuthProvider } from '../providers/AuthProvider';\nimport { ProfileProvider } from '../providers/ProfileProvider';\nimport { MatchProvider } from '../providers/MatchProvider';\nimport { ProfileListProvider } from '../providers/ProfileListProvider';\nimport { NotificationProvider } from '../providers/NotificationProvider';\nimport { LatticeThemeProvider } from '../providers/LatticeThemeProvider';\n\nexport default function({ children }) {\n  return <>\n    <AuthProvider>\n      <ProfileProvider>\n        <ProfileListProvider>\n          <MatchProvider>\n            <NotificationProvider>\n              <LatticeThemeProvider>\n                {children}\n              </LatticeThemeProvider>\n            </NotificationProvider>\n          </MatchProvider>\n        </ProfileListProvider>\n      </ProfileProvider>\n    </AuthProvider>\n  </>;\n}","import React from \"react\";\n\nimport '../styles/Spinner.css';\n\nexport default function({ size = `100px` }) {\n  return <div id=\"spinner-container\">\n    <img\n      id=\"spinner\"\n      src=\"/lattice/logo.png\"\n      alt=\"Lattice logo\"\n      style={{ width: size, height: size }}\n    />\n  </div>;\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Redirect, Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport PassOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\nimport { Button, Container, Box } from '@material-ui/core';\n\nimport { useAuth } from '../../providers/AuthProvider';\n\nimport \"../../styles/Form.scss\"\nimport Spinner from '../../components/Spinner';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function () {\n  const classes = useStyles();\n  const { token, getRegistrantEmail, register } = useAuth();\n  const { registrantId } = useParams();\n\n  const [ isLoading, setLoading ] = useState(true);\n  const [ failedToLoad, setFailedToLoad ] = useState(null);\n  const [ email, setEmail ] = useState(``);\n  const [ errors, setErrors ] = useState({});\n  const [ isSubmitting, setSubmitting ] = useState(false);\n  const [ failedToSubmit, setFailedToSubmit ] = useState(null);\n  const [ redirect, setRedirect ] = useState(``);\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const email = await getRegistrantEmail(registrantId);\n        setEmail(email);\n      } catch (err) {\n        setFailedToLoad(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [ getRegistrantEmail, registrantId ]);\n\n  useEffect(() => { token && setRedirect(`/`) }, [token]);\n\n  const onSubmit = async e => {\n    try {\n      e.preventDefault();\n      setSubmitting(true);\n      setErrors({});\n\n      const email = e.target.email.value;\n      const password = e.target.password.value;\n      const confirmPassword = e.target.confirmPassword.value;\n\n      if (!email) {\n        return setErrors({ email: `Invalid email, please check the link provided` });\n      }\n\n      if (!password) {\n        return setErrors({ password: `Please provide a password` });\n      }\n\n      if (password.length < 6) {\n        return setErrors({ password: `Password must be atleast 6 characters long` });\n      }\n\n      if (password !== confirmPassword) {\n        return setErrors({ confirmPassword: `Passwords don't match` });\n      }\n\n      await register(registrantId, password);\n    } catch (err) {\n      setFailedToSubmit(err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Container className={classes.root}>\n      <form onSubmit={onSubmit}>\n        <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n          {isLoading ? <h1 className=\"title\">Loading...</h1> :\n            failedToLoad ?\n              <Box color=\"error.main\" textAlign=\"center\">\n                <h3>{failedToLoad.message}</h3>\n              </Box> :\n              <>\n                <h1 className=\"title\">Create Account</h1>\n                <Box color=\"error.main\" textAlign=\"center\">{failedToSubmit && failedToSubmit.message}</Box>\n                <div className={classes.margin + \" font-opensans\"}>\n                  <Grid container spacing={4} className=\"lattice-form-band\" alignItems=\"flex-end\">\n                    <Grid className=\"lattice-icon\" item>\n                      <MailOutlineIcon />\n                    </Grid>\n                    <p className=\"lattice-form-label mb0 font-gray\">Email Address</p>\n                    <Grid item className=\"lattice-form-input\">\n                      <TextField name=\"email\" type=\"email\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" value={email} disabled={true} />\n                      {errors.email &&\n                        <Box color=\"error.main\">{errors.email}</Box>\n                      }\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={4} className=\"lattice-form-band\" alignItems=\"flex-end\">\n                    <Grid item className=\"lattice-icon\">\n                      <PassOutlinedIcon />\n                    </Grid>\n                    <p className=\"lattice-form-label mb0 font-gray\">Password</p>\n                    <Grid item className=\"lattice-form-input\">\n                      <TextField name=\"password\" type=\"password\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" />\n                      {errors.password &&\n                        <Box color=\"error.main\">{errors.password}</Box>\n                      }\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={4} className=\"lattice-form-band\" alignItems=\"flex-end\">\n                    <Grid item className=\"lattice-icon\">\n                      <PassOutlinedIcon />\n                    </Grid>\n                    <p className=\"lattice-form-label mb0 font-gray\">Confirm Password</p>\n                    <Grid item className=\"lattice-form-input\">\n                      <TextField name=\"confirmPassword\" type=\"password\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" />\n                      {errors.confirmPassword &&\n                        <Box color=\"error.main\">{errors.confirmPassword}</Box>\n                      }\n                    </Grid>\n                  </Grid>\n                  <input type=\"hidden\" name=\"registrantId\" value={registrantId} />\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    className=\"center\"\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                  >\n                    {\n                      isSubmitting ? <Spinner size=\"25px\" /> : `Sign Up`\n                    }\n                  </Button>\n                  <Box className=\"mt4\">Already registered? Log in <Link to=\"/auth/login\">here</Link></Box>\n                </div>\n              </>\n          }\n        </div>\n      </form>\n      {redirect && <Redirect to={redirect} />}\n    </Container>\n  );\n}\n","import { useState } from 'react';\n\nexport default function(defaultShow = false) {\n  const [ show, setShow ] = useState(defaultShow);\n  const [ state, setState ] = useState(null);\n  \n  const open = () => setShow(true);\n  const dismiss = () => {\n    setState(null);\n    setShow(false);\n  };\n\n  return { show, open, dismiss, state, setState };\n};","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function({ show, onClose, onSuccess }) {\n  const { register, handleSubmit, errors } = useForm();\n\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <form onSubmit={handleSubmit(onSuccess)}>\n          <DialogTitle>Request Password Reset</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              name=\"email\"\n              label=\"Email\"\n              variant=\"outlined\"\n              type=\"email\"\n              margin=\"normal\"\n              fullWidth\n              inputRef={register({ required: `This field is required` })}\n              error={!!errors.email}\n              helperText={errors.email?.message}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button type=\"submit\" color=\"primary\">\n              Submit\n            </Button>\n            <Button onClick={onClose} color=\"primary\">\n              Cancel\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function({ show, onClose, error }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>{error ? `Error` : `Success`}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {\n              error ?\n                `There was a problem trying to reset your password - ${error.message}` :\n                `An password reset link has been sent to your email.`\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport PassOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\nimport { Button, Box } from '@material-ui/core';\nimport Container from \"@material-ui/core/Container\";\n\nimport { useAuth } from '../../providers/AuthProvider';\nimport useDialogControl from '../../components/DialogControl.hook';\nimport Spinner from '../../components/Spinner';\nimport ResetRequest from './dialogs/reset-request';\nimport ResetRequestAlert from './dialogs/reset-request-alert';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function InputWithIcon() {\n  const classes = useStyles();\n  const { token, login, sendResetLink } = useAuth();\n  const resetRequestDialog = useDialogControl();\n  const resetRequestAlertDialog = useDialogControl();\n\n  const [ errors, setErrors ] = useState({});\n  const [ isSubmitting, setSubmitting ] = useState(false);\n  const [ failedToSubmit, setFailedToSubmit ] = useState(null);\n  const [ redirect, setRedirect ] = useState(``);\n  \n  useEffect(() => {token && setRedirect(`/`)}, [ token ]);\n\n  const onSubmit = async e => {\n    try {\n      e.preventDefault();\n      setSubmitting(true);\n      setErrors({});\n\n      const email = e.target.email.value;\n      const password = e.target.password.value;\n\n      if(!email) {\n        return setErrors({ email: `Please provide an email` });\n      }\n\n      if(!password) {\n        return setErrors({ password: `Please provide a password` });\n      }\n\n      await login(email, password);\n    } catch(err) {\n      setFailedToSubmit(err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const requestReset = async ({ email }) => {\n    try {\n      await sendResetLink(email);\n    } catch(err) {\n      resetRequestAlertDialog.setState(err);\n    } finally {\n      resetRequestDialog.dismiss();\n      resetRequestAlertDialog.open();\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={onSubmit}>\n        <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n          <h1 className=\"title\">Lattice Log In</h1>\n          <div className=\"font-opensans tc mb3\">\n            <p className=\"mb4\">\n              Discover and connect with MakeUC 2020 hackers from across the world!\n            </p>\n            <Box color=\"error.main\" textAlign=\"center\">{failedToSubmit && failedToSubmit.message}</Box>\n            <div className={classes.margin}>\n              <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                <Grid className=\"lattice-icon\" item>\n                  <MailOutlineIcon />\n                </Grid>\n                <p className=\"lattice-form-label mb0 font-gray\">Email Address</p>\n                <Grid item className=\"lattice-form-input\">\n                  <TextField name=\"email\" type=\"email\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" />\n                    {errors.email &&\n                      <Box color=\"error.main\">{errors.email}</Box>\n                    }\n                </Grid>\n              </Grid>\n              <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                <Grid item className=\"lattice-icon\">\n                  <PassOutlinedIcon />\n                </Grid>\n                <p className=\"lattice-form-label mb0 font-gray\">Password</p>\n                <Grid item className=\"lattice-form-input\">\n                  <TextField name=\"password\" type=\"password\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" />\n                    {errors.password &&\n                      <Box color=\"error.main\">{errors.password}</Box>\n                    }\n                </Grid>\n              </Grid>\n            </div>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              className=\"center\"\n              color=\"primary\"\n              disabled={isSubmitting}\n            >\n              {\n                isSubmitting ? <Spinner size=\"25px\" /> : `Sign In`\n              }\n            </Button>\n            <Box m={1} />\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              className=\"center\"\n              color=\"primary\"\n              onClick={resetRequestDialog.open}\n            >Forgot Password</Button>\n            <Box className=\"mt4\">Don't have an account? Contact us at <a href=\"mailto:info@makeuc.io\">info@makeuc.io</a> for an invite link</Box>\n          </div>\n        </div>\n      </form>\n      <ResetRequest\n        show={resetRequestDialog.show}\n        onClose={resetRequestDialog.dismiss}\n        onSuccess={requestReset}\n      />\n      <ResetRequestAlert\n        show={resetRequestAlertDialog.show}\n        onClose={resetRequestAlertDialog.dismiss}\n        error={resetRequestAlertDialog.state}\n      />\n      {redirect && <Redirect to={redirect} />}\n    </Container>\n  );\n}\n","import React, { useState } from 'react'\nimport Tour from 'reactour'\nimport { useProfile } from '../providers/ProfileProvider';\n\nexport default function({ name, steps }) {\n  const { profile, completeTour } = useProfile();\n  const [ isOpen, setOpen ] = useState(true);\n\n  const onTourComplete = async () => {\n    setOpen(false);\n    await completeTour(name);\n  };\n\n  const showTour = profile.completedTours && !profile.completedTours?.includes(name);\n\n  return showTour ?\n    <Tour\n      steps={steps}\n      isOpen={isOpen}\n      onRequestClose={onTourComplete}\n    /> : null\n};\n","import React from 'react'\nimport TourComponent from './TourComponent';\n\nexport default function() {\n  return <TourComponent name=\"notification\" steps={steps} />;\n}\n\nconst steps = [\n  {\n    selector: '',\n    content: `Congratulations on you first match! This is the profile of the hacker you matched with, which means that you both are interested in teaming up with each other.`\n  },\n  {\n    selector: '.slack-button',\n    content: `This is the username of this hacker on the MakeUC Slack workspace. You can use this to find and reach out to the hacker.`\n  },\n  {\n    selector: '.email-button',\n    content: `If for some reason you could not get in touch with the hacker on the MakeUC Slack, you can always try the old-fashioned email.`\n  }\n];\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport NotificationTour from '../../../tours/NotificationTour';\n\nexport default function ({ show, onClose, matchedUser = {} }) {\n  const { skills, name, idea, lookingFor, email, slack } = matchedUser;\n\n  const skillRows = [skills?.slice(0, 3), skills?.slice(3, 6)];\n\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <div style={{ width: `300px` }}>\n          {\n            !!name &&\n            <div className=\"font-opensans\" style={{ textAlign: `center` }}>\n              <h2 className=\"name\">\n                <small>You matched with</small> <br /> {name}!\n              </h2>\n              <h3>Project Idea</h3>\n              <div\n                style={{\n                  marginTop: `-5px`,\n                  marginLeft: `15px`,\n                  marginRight: `15px`,\n                  marginBottom: `35px`,\n                  borderRadius: `10px`,\n                  paddingBottom: `0px`,\n                }}\n              >\n                <p\n                  style={{\n                    fontSize: `13px`,\n                  }}\n                >\n                  {idea}\n                </p>\n              </div>\n              <h3>Offering</h3>\n              {skillRows.map(\n                (row, index) =>\n                  !!row.length && (\n                    <div\n                      key={index}\n                      style={{\n                        padding: `25px`,\n                        paddingBottom: `10px`,\n                        marginTop: `-45px`,\n                        marginLeft: `15px`,\n                        marginRight: `15px`,\n                        display: `flex`,\n                        borderRadius: `10px`,\n                      }}\n                    >\n                      {row.map((skill) => (\n                        <i\n                          key={skill.title}\n                          className={skill.icon}\n                          style={{\n                            padding: `10px`,\n                            fontSize: `50px`,\n                          }}\n                        />\n                      ))}\n                    </div>\n                  )\n              )}\n              <h3>Looking For</h3>\n              <div\n                style={{\n                  padding: `25px`,\n                  marginTop: `-45px`,\n                  marginLeft: `15px`,\n                  marginRight: `15px`,\n                  display: `flex`,\n                  borderRadius: `10px`,\n                }}\n              >\n                {lookingFor.map((look) => (\n                  <i\n                    key={look.title}\n                    className={look.icon}\n                    style={{\n                      padding: `10px`,\n                      fontSize: `50px`,\n                    }}\n                  ></i>\n                ))}\n              </div>\n              <Button className=\"slack-button\" fullWidth={true} color=\"primary\">Slack: @{slack}</Button>\n              <Button className=\"email-button\" fullWidth={true} color=\"primary\">Email: {email}</Button>\n            </div>\n          }\n        </div>\n        <NotificationTour />\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Container from \"@material-ui/core/Container\";\n\nimport { useNotification } from '../../providers/NotificationProvider';\nimport { useProfileList } from '../../providers/ProfileListProvider';\nimport useDialogControl from '../../components/DialogControl.hook';\nimport NotificationDetailsDialog from './dialogs/notification-details';\nimport Spinner from '../../components/Spinner';\n\nconst action = (\n  <Button className=\"font-secondary-dark\" size=\"small\">\n    <LaunchIcon className=\"font-secondary-dark\" />\n  </Button>\n);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  snackbar: {\n    backgroundColor: '#8174ff',\n    fontFamily: 'Open Sans'\n  }\n}));\n\nexport default function() {\n  const classes = useStyles();\n  const { isLoading, failedToLoad, notifications, getNotifications, readNotifications } = useNotification();\n  const dialogControl = useDialogControl();\n  const { skills } = useProfileList();\n  \n  const [ openNotification, setOpenNotification ] = useState(null);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => { readNotifications() }, []);\n\n  const openNotificationDetails = notification => {\n    const profile = notification.to;\n    const profileSkills = skills.filter(skill => profile.skills?.includes(skill.title));\n    const profileLookingFor = skills.filter(skill => profile.lookingFor?.includes(skill.title));\n    const hydratedProfile = { ...profile, skills: profileSkills, lookingFor: profileLookingFor };\n\n    setOpenNotification({ ...notification, hydratedProfile });\n    dialogControl.open();\n  };\n\n  return (\n    <Container className={classes.root + \" nav-bar-margin\"}>\n      {\n        isLoading ?\n          <TextBox>Fetching notifications... <br /> <Spinner /></TextBox> :\n\n        failedToLoad ? \n          <TextBox>\n            <p>Error fetching notifications</p>\n            <Button variant=\"contained\" color=\"primary\" onClick={getNotifications}>Try again</Button>\n          </TextBox> :\n\n        notifications.length ?\n          <div className=\"pa4\">\n            {notifications.map(notification =>\n              <SnackbarContent\n                key={notification.id}\n                className={classes.snackbar}\n                message={`You matched with ${notification.to?.name} ${notification.notification?.read ? `` : `(NEW)`}`}\n                action={action}\n                onClick={() => openNotificationDetails(notification)}\n              />\n            )}\n          </div> :\n\n          <TextBox>No notifications</TextBox>\n      }\n      <NotificationDetailsDialog\n        show={dialogControl.show}\n        onClose={dialogControl.dismiss}\n        matchedUser={openNotification?.hydratedProfile}\n      />\n    </Container>\n  );\n};\n\nfunction TextBox({ children }) {\n  return <Container className=\"nav-bar-margin\">\n    <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n      {children}\n    </div>\n  </Container>;\n};\n","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport Spinner from './Spinner';\n\nexport default function({ onClick, children, ...props }) {\n  const [ waiting, setWaiting ] = useState();\n\n  const _onClick = async (...args) => {\n    try {\n      setWaiting(true);\n      await onClick(...args);\n    } finally {\n      setWaiting(false);\n    }\n  }\n\n  return <Button {...props} onClick={_onClick} disabled={waiting}>\n    {\n      waiting ? <Spinner size=\"25px\" /> : children\n    }\n  </Button>;\n};","import React from 'react'\nimport TourComponent from './TourComponent';\n\nexport default function() {\n  return <TourComponent name=\"profile\" steps={steps} />;\n}\n\nconst steps = [\n  {\n    selector: '',\n    content: `Welcome to your Lattice profile page. This is the place where you control your profile, settings and visibility on Lattice.`\n  },\n  {\n    selector: '.edit-profile-button',\n    content: `You can hit this button to edit your profile.`\n  },\n  {\n    selector: '.toggle-visibility-button',\n    content: `From here you can control your visibility on Lattice. When you are done looking for teammates, you can mark your profile as not visibile so that you stop receiving matches.`\n  },\n  {\n    selector: '.notification-request-button',\n    content: `We highly recommend that you turn on push notifications so that you are notified as soon as you are matched with another hacker. If you deny the permission to send push notifications, you can only enable that later by going into your browser's settings.`\n  },\n  {\n    selector: '.home-link',\n    content: `When you are satisfied with your settings, you can go back to the home page and start matching with hackers.`\n  }\n];\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PromiseButton from '../../../components/PromiseButton';\n\nexport default function({ show, onSuccess, onClose, visible }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Are you sure</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Mark you profile {visible ? ` not` : ``} visible?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <PromiseButton onClick={onSuccess} color=\"primary\">\n            Yes\n          </PromiseButton>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function({ show, onClose, visible }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Success</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Your profile is now {visible ? ` ` : ` not`} visible.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Spinner from '../../../components/Spinner';\n\nexport default function({ show, onClose, onSuccess }) {\n  const { register, getValues, handleSubmit, errors } = useForm();\n\n  const [ isSubmitting, setSubmitting ] = useState(false);\n\n  const onSubmit = async data => {\n    try {\n      setSubmitting(true);\n      await onSuccess(data);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogTitle>Change Password</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              name=\"oldPassword\"\n              label=\"Current password\"\n              variant=\"outlined\"\n              type=\"password\"\n              margin=\"normal\"\n              fullWidth\n              inputRef={register({ required: `This field is required` })}\n              error={!!errors.oldPassword}\n              helperText={errors.oldPassword?.message}\n            />\n            <TextField\n              name=\"newPassword\"\n              label=\"New password\"\n              variant=\"outlined\"\n              type=\"password\"\n              margin=\"normal\"\n              fullWidth\n              inputRef={register({\n                required: `This field is required`,\n                minLength: 6\n              })}\n              error={!!errors.newPassword}\n              helperText={\n                errors.newPassword?.message ||\n                (errors.newPassword?.type === `minLength` && `Passwords should be atleast 6 characters`)\n              }\n            />\n            <TextField\n              name=\"confirmNewPassword\"\n              label=\"Confirm new password\"\n              variant=\"outlined\"\n              type=\"password\"\n              margin=\"normal\"\n              fullWidth\n              inputRef={register({\n                required: `This field is required`,\n                validate: confirm => getValues(`newPassword`) === confirm\n              })}\n              error={!!errors.confirmNewPassword}\n              helperText={\n                errors.confirmNewPassword?.message ||\n                (errors.confirmNewPassword?.type === `validate` && `Passwords do not match`)\n              }\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button type=\"submit\" color=\"primary\"disabled={isSubmitting} >\n              {isSubmitting ? <Spinner size=\"25px\" /> : `Submit`}\n            </Button>\n            <Button onClick={onClose} color=\"primary\">\n              Cancel\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function({ show, onClose, error }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Success</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {\n              error ?\n                `There was a problem trying to change your password, please try again later.` :\n                `Your password has been successfully changed.`\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PromiseButton from '../../../components/PromiseButton';\n\nexport default function({ show, onSuccess, onClose }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Logout</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to log out?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <PromiseButton onClick={onSuccess} color=\"primary\">\n            Yes\n          </PromiseButton>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport PersonIcon from '@material-ui/icons/Person';\nimport SlackIcon from '@material-ui/icons/AlternateEmail';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport { Button, Container } from '@material-ui/core';\n\nimport { useAuth } from '../../providers/AuthProvider';\nimport { useProfile } from '../../providers/ProfileProvider';\nimport { useNotification } from '../../providers/NotificationProvider';\nimport useDialogControl from '../../components/DialogControl.hook';\nimport PromiseButton from '../../components/PromiseButton';\nimport ProfileTour from '../../tours/ProfileTour';\nimport ToggleVisibilityConfirmation from './dialogs/toggle-visibility-confirmation';\nimport ToggleVisibilityAlert from './dialogs/toggle-visibility-alert';\nimport ChangePassword from './dialogs/change-password';\nimport ChangePasswordAlert from './dialogs/change-password-alert';\nimport LogoutConfirmation from './dialogs/logout-confirmation';\n\nimport '../../styles/Profile.scss'\n\nexport default function() {\n  const { logout, changePassword } = useAuth();\n  const { isLoading, profile, toggleVisibility } = useProfile();\n  const { pushPermission, requestNotificationPermission } = useNotification();\n\n  const toggleVisibilityConfirmationDialog = useDialogControl();\n  const toggleVisibilityAlertDialog = useDialogControl();\n  const changePasswordDialog = useDialogControl();\n  const changePasswordAlertDialog = useDialogControl();\n  const logoutConfirmationDialog = useDialogControl();\n\n  const [ redirect, setRedirect ] = useState();\n\n  const redirectToProfileForm = () => setRedirect(`/profile/edit`);\n\n  const onToggleVisibility = async () => {\n    await toggleVisibility();\n    toggleVisibilityConfirmationDialog.dismiss();\n    toggleVisibilityAlertDialog.open();\n  };\n\n  const onPasswordChange = async data => {\n    try {\n      await changePassword(data);\n    } catch(err) {\n      changePasswordAlertDialog.setState(err);\n    } finally {\n      changePasswordDialog.dismiss();\n      changePasswordAlertDialog.open();\n    }\n  };\n\n  const onLogout = async () => {\n    await logout();\n    logoutConfirmationDialog.dismiss();\n  };\n\n  return (\n    <Container className=\"nav-bar-margin\">\n      <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n        <h1 className=\"title\">Lattice Account</h1>\n          {isLoading ? `Loading...` :\n            <>\n              <div className=\"mb4\">\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <PersonIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">{profile?.name}</p>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <MailOutlineIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">{profile?.email}</p>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid item className=\"lattice-icon\">\n                    <SlackIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">{profile?.slack}</p>\n                </Grid>\n              </div>\n\n              <Button\n                variant=\"contained\"\n                className=\"center profile-button edit-profile-button\"\n                color=\"primary\"\n                onClick={redirectToProfileForm}\n              >Edit Profile</Button>\n\n              <Button\n                variant=\"contained\"\n                className=\"center profile-button toggle-visibility-button\"\n                color=\"primary\"\n                onClick={toggleVisibilityConfirmationDialog.open}\n              >\n                {profile.visible ?\n                  <>\n                    <VisibilityIcon /> &nbsp; Mark Not Visible\n                  </> :\n                  <>\n                    <VisibilityOffIcon /> &nbsp; Mark Visible\n                  </>\n                }\n              </Button>\n\n              {\n                pushPermission === `granted` ? null :\n                  <PromiseButton\n                    variant=\"contained\"\n                    className=\"center profile-button notification-request-button\"\n                    color={pushPermission === `denied` ? `secondary` : `primary`}\n                    onClick={requestNotificationPermission}\n                    disabled={pushPermission === `denied`}\n                  >\n                    {\n                      pushPermission === `default` ?\n                        `Enable Push Notification` :\n                        `Push Notification Permission Denied`\n                    }\n                  </PromiseButton>\n              }\n\n              <Button\n                variant=\"contained\"\n                className=\"center profile-button\"\n                color=\"primary\"\n                onClick={changePasswordDialog.open}\n              >Change Password</Button>\n\n              <Button\n                variant=\"contained\"\n                className=\"center profile-button\"\n                color=\"primary\"\n                onClick={logoutConfirmationDialog.open}\n              >Logout</Button>\n            </>\n          }\n          <ToggleVisibilityConfirmation\n            show={toggleVisibilityConfirmationDialog.show}\n            onClose={toggleVisibilityConfirmationDialog.dismiss}\n            onSuccess={onToggleVisibility}\n            visible={profile.visible}\n          />\n          <ToggleVisibilityAlert\n            show={toggleVisibilityAlertDialog.show}\n            onClose={toggleVisibilityAlertDialog.dismiss}\n            visible={profile.visible}\n          />\n          <ChangePassword\n            show={changePasswordDialog.show}\n            onClose={changePasswordDialog.dismiss}\n            onSuccess={onPasswordChange}\n          />\n          <ChangePasswordAlert\n            show={changePasswordAlertDialog.show}\n            onClose={changePasswordAlertDialog.dismiss}\n            error={changePasswordAlertDialog.state}\n          />\n          <LogoutConfirmation\n            show={logoutConfirmationDialog.show}\n            onClose={logoutConfirmationDialog.dismiss}\n            onSuccess={onLogout}\n          />\n          {redirect && <Redirect to={redirect} />}\n      </div>\n      <ProfileTour />\n    </Container>\n  );\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function({ show, onClose }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Success</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Your profile was sucessfully updated.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Next\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport SlackIcon from '@material-ui/icons/AlternateEmail';\nimport PersonIcon from '@material-ui/icons/Person';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { Button, Container, InputAdornment, Box } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { AssignmentTurnedIn } from \"@material-ui/icons\";\n\nimport { useProfile } from \"../../providers/ProfileProvider\";\nimport ConfirmationDialog from './dialogs/profile-save-confirmation';\n\nimport \"../../styles/Form.scss\"\nimport { useProfileList } from '../../providers/ProfileListProvider';\nimport Spinner from '../../components/Spinner';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function() {\n  const classes = useStyles();\n  const { isLoading, profile, updateProfile } = useProfile();\n  const { skills } = useProfileList();\n  const { register, setValue, handleSubmit, errors, reset, watch } = useForm();\n\n  const [ isSubmitting, setSubmitting ] = useState(false);\n  const [ failedToSubmit, setFailedToSubmit ] = useState(``);\n  const [ showConfirmationModal, setShowModal ] = useState(false);\n  const [ redirect, setRedirect ] = useState();\n\n  useEffect(()=> {\n    register({ name: `skills` }, {\n      required: true,\n      validate: value => value.length <= 6\n    });\n    register({ name: `lookingFor` }, {\n      required: true,\n      validate: value => value.length <= 3\n    });\n  }, [ register ]);\n\n  useEffect(() => {\n    const profileSkills = skills?.filter(skill => profile?.skills?.includes(skill.title));\n    const profileLookingFor = skills?.filter(skill => profile?.lookingFor?.includes(skill.title));\n\n    reset({ ...profile, skills: profileSkills, lookingFor: profileLookingFor });\n  }, [ reset, skills, profile ]);\n\n  useEffect(() => {\n    setFailedToSubmit(!!Object.keys(errors).length && `Please fix the above errors`);\n  }, [ errors ]);\n\n  const onSubmit = async data => {\n    try {\n      setSubmitting(true);\n\n      const skills = data.skills.map(s => s.title);\n      const lookingFor = data.lookingFor.map(s => s.title);\n\n      await updateProfile({ ...data, skills, lookingFor });\n\n      setShowModal(true);\n    } catch(err) {\n      setFailedToSubmit(err.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const onModalDismiss = () => {\n    setShowModal(false);\n    setRedirect(`/profile`);\n  };\n\n  const profileSkills = watch(`skills`) || [];\n  const profileLookingFor = watch(`lookingFor`)|| [];\n\n  return (\n    <Container className={classes.root + \" nav-bar-margin\"}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n          <h1 className=\"title\">Your Profile</h1>\n          {isLoading ? `Loading...` :\n            <>\n              <div className={classes.margin + \" font-opensans\"}>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <PersonIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Full name</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <TextField\n                      fullWidth\n                      name=\"name\"\n                      id=\"input-with-icon-grid\"\n                      variant=\"outlined\" \n                      placeholder=\"John Doe\"\n                      inputRef={register({ required: `This field is required` })}\n                      error={!!errors.name}\n                      helperText={errors.name?.message || `Every hacker needs a public identity.`}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid item className=\"lattice-icon\">\n                    <DescriptionIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Project Idea</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <TextField\n                      fullWidth\n                      multiline\n                      name=\"idea\"\n                      id=\"input-with-icon-grid\"\n                      variant=\"outlined\"\n                      placeholder=\"A coronavirus map\"\n                      inputRef={register({ required: `This field is required`, maxLength: 250 })}\n                      error={!!errors.idea}\n                      helperText={\n                        errors.idea?.message ||\n                        (\n                          errors.idea?.type === `maxLength` ?\n                          `Please write no more than 250 characters` :\n                          `Share your innovative idea. It's fine if you don't have one.`\n                        )\n                      }\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <AssignmentTurnedIn />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Your skills</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <Autocomplete\n                      multiple\n                      filterSelectedOptions\n                      id=\"tags-outlined\"\n                      options={skills} // TODO: Need to be taken from DB ideally\n                      getOptionLabel={(option) => option.title}\n                      value={profileSkills}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"\"\n                          placeholder=\"Skills\"\n                          error={!!errors.skills}\n                          helperText={(errors.skills?.type === `required`) ?\n                            `Please select atleast one` :\n                            `Please select no more than 6`\n                          }\n                        />\n                      )}\n                      onChange={(e, skills) => setValue(`skills`, skills)}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <AssignmentTurnedIn />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Looking For</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <Autocomplete\n                      multiple\n                      id=\"tags-outlined\"\n                      options={skills} // TODO: Need to be taken from DB ideally\n                      getOptionLabel={(option) => option.title}\n                      filterSelectedOptions\n                      value={profileLookingFor}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"\"\n                          placeholder=\"Skills\"\n                          error={!!errors.lookingFor}\n                          helperText={(errors.lookingFor?.type === `required`) ?\n                            `Please select atleast one` :\n                            `Please select no more than 3`\n                          }\n                        />\n                      )}\n                      onChange={(e, skills) => setValue(`lookingFor`, skills)}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid item className=\"lattice-icon\">\n                    <SlackIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Slack handle</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <TextField\n                      fullWidth\n                      name=\"slack\"\n                      id=\"input-with-icon-grid\"\n                      variant=\"outlined\"\n                      inputRef={register({ required: `This field is required` })}\n                      InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">@</InputAdornment>\n                      }}\n                      error={!!errors.slack}\n                      helperText={errors.slack?.message || `Please provide the handle you have on the MakeUC Slack. Your matches will use this to contact you.`}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                className=\"center\"\n                color=\"primary\"\n                disabled={isSubmitting}\n              >\n                {\n                  isSubmitting ? <Spinner size=\"25px\" /> : `Save`\n                }\n              </Button>\n              {failedToSubmit &&\n                <Box color=\"error.main\" className=\"mt2\">{failedToSubmit}</Box>\n              }\n            </>\n          }\n        </div>\n      </form>\n      <ConfirmationDialog show={showConfirmationModal} onClose={onModalDismiss}>\n        <h2>Success</h2>\n        <p>Your profile was sucessfully updated.</p>\n        <Button\n          variant=\"contained\"\n          className=\"center\"\n          color=\"primary\"\n          onClick={onModalDismiss}\n        >Next</Button>\n      </ConfirmationDialog>\n      {redirect && <Redirect to={redirect} />}\n    </Container>\n  );\n};\n","import React from 'react';\nimport TourComponent from './TourComponent';\n\nexport default function() {\n  return <TourComponent name=\"home\" steps={steps} />\n}\n\nconst steps = [\n  {\n    selector: '',\n    content: `This is the Lattice homepage. Here you can find other enthusiastic hackers and team up with them to build awesome stuff.`\n  },\n  {\n    selector: '.hacker-profile-card:last-of-type',\n    content: `This is a hacker profile card. We automatically sort these profiles based on the skills you have and are looking for.`\n  },\n  {\n    selector: '.hacker-profile-card:last-of-type',\n    content: `If you are familiar with Tinder, you already know what to do. If not, here it is: you can swipe these cards either left or right.`\n  },\n  {\n    selector: '.hacker-profile-card:last-of-type',\n    content: `Swiping left means that you are not interested in teaming up with this hacker. Swiping right means that you like this hacker's profile and are interested in teaming up with them.`\n  },\n  {\n    selector: '.notifications-link',\n    content: `If you and another hacker both swipe right on each other, it's a match! You both will get a notification. You can check out all your match notifications here.`\n  },\n  {\n    selector: '.profile-link',\n    content: `You can always go here and modify your profile.`\n  },\n  {\n    selector: '.deck',\n    content: `That is all I have for you today. Hope you have a great time at MakeUC. Happy swiping!`\n  }\n];\n","import React from 'react'\nimport TourComponent from './TourComponent';\n\nexport default function() {\n  return <TourComponent name=\"reset\" steps={steps} />;\n}\n\nconst steps = [\n  {\n    selector: '',\n    content: `Hello there! It seems like you have seen all the hackers' profiles that have registered so far. So now, there are three things you can do.`\n  },\n  {\n    selector: '.reset-button',\n    content: `If you click on this button, all the profiles that you swiped left on will be available to you again.`\n  },\n  {\n    selector: '.mark-not-visibile-button',\n    content: `If you have already found a team for the hackathon, you can click on this button to mark your profile as not visible, so that you don't get any further matches.`\n  },\n  {\n    selector: '.wait-text',\n    content: `Hackers will keep on flowing into Lattice until the day of the hackathon, so you can simply wait for more hackers to join Lattice.`\n  }\n];\n","import React from \"react\";\nimport { string, array } from \"prop-types\";\nimport { animated, interpolate } from \"react-spring/hooks\";\n\nimport \"../../styles/Card.scss\";\n\nconst Card = ({ i, x, y, rot, scale, trans, bind, data }) => {\n  const { skills, name, idea, lookingFor } = data[i];\n\n  const skillRows = [skills.slice(0, 3), skills.slice(3, 6)];\n\n  return (\n    <animated.div\n      key={i}\n      style={{\n        transform: interpolate(\n          [x, y],\n          (x, y) => `translate3d(${x}px,${y}px,0)`\n        )\n      }}\n    >\n      <animated.div\n        {...bind(i)}\n        style={{\n          transform: interpolate([rot, scale], trans),\n          boxShadow: interpolate(\n            [x], (x) => {\n              if(x > -5 && x < 5) return null;\n              const opacity = Math.abs(x)/300;\n              const color = x > 0 ? `rgba(0, 255, 0, ${opacity})` : `rgba(255, 0, 0, ${opacity})`;\n              return `${x*1.5}px 0 80px -80px ${color} inset`;\n            }\n          )\n        }}\n      >\n        <div className=\"font-opensans hacker-profile-card\"\n          style={{\n            textAlign: `center`,\n          }}\n        >\n          <h2 className=\"name\">\n            {name}\n          </h2>\n          <h3>Project Idea</h3>\n          <div\n            style={{\n              marginTop: `-5px`,\n              marginLeft: `15px`,\n              marginRight: `15px`,\n              marginBottom: `35px`,\n              borderRadius: `10px`,\n              paddingBottom: `0px`,\n            }}\n          >\n            <p\n              style={{\n                fontSize: `13px`,\n              }}\n            >\n              {idea}\n            </p>\n          </div>\n          <h3>Offering</h3>\n          {skillRows.map(\n            (row, index) =>\n              !!row.length && (\n                <div\n                  key={index}\n                  style={{\n                    padding: `25px`,\n                    paddingBottom: `10px`,\n                    marginTop: `-45px`,\n                    marginLeft: `15px`,\n                    marginRight: `15px`,\n                    display: `flex`,\n                    borderRadius: `10px`,\n                  }}\n                >\n                  {row.map((skill) => (\n                    <i\n                      key={skill.title}\n                      className={skill.icon}\n                      style={{\n                        padding: `10px`,\n                        fontSize: `50px`,\n                      }}\n                    />\n                  ))}\n                </div>\n              )\n          )}\n          <h3>Looking For</h3>\n          <div\n            style={{\n              padding: `25px`,\n              marginTop: `-45px`,\n              marginLeft: `15px`,\n              marginRight: `15px`,\n              display: `flex`,\n              borderRadius: `10px`,\n            }}\n          >\n            {lookingFor.map((look) => (\n              <i\n                key={look.title}\n                className={look.icon}\n                style={{\n                  padding: `10px`,\n                  fontSize: `50px`,\n                }}\n              ></i>\n            ))}\n          </div>\n        </div>\n      </animated.div>\n    </animated.div>\n  );\n};\n\nCard.propTypes = {\n  skills: array,\n  name: string,\n  idea: string,\n  lookingFor: array,\n};\n\nexport default Card;\n","import React, { useState } from 'react';\nimport { useSprings } from 'react-spring/hooks';\nimport { useGesture } from 'react-with-gesture';\n\nimport { useMatch } from '../../providers/MatchProvider';\nimport { useProfileList } from '../../providers/ProfileListProvider';\nimport Card from './Card';\nimport '../../styles/Deck.css';\n\nconst to = (i) => ({\n  x: 0,\n  y: i * -3,\n  scale: 1,\n  rot: -5 + Math.random() * 10,\n  delay: i * 100,\n});\n\nconst from = (i) => ({ rot: 0, scale: 1.5, y: -1000 });\n\nconst trans = (r, s) =>\n  `perspective(1500px) rotateX(10deg) rotateY(${\n    r / 10\n  }deg) rotateZ(${r}deg) scale(${s})`;\n\nfunction Deck({ data }) {\n  const { getProfiles } = useProfileList();\n  const { swipeProfile } = useMatch();\n\n  const [gone] = useState(() => new Set());\n\n  const [props, set] = useSprings(data.length, (i) => ({\n    ...to(i),\n    from: from(i),\n  }));\n\n  const onSwipe = async (profile, direction) => {\n    await swipeProfile(profile, (direction === 1));\n  };\n\n  const onFinish = () => {\n    console.log(`onFinish: End of cards`);\n    getProfiles();\n  };\n\n  const bind = useGesture(\n    ({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity,\n    }) => {\n      const trigger = velocity > 0.2;\n      const dir = xDir < 0 ? -1 : 1;\n\n      let swipePromise = null;\n\n      if (!down && trigger) {\n        swipePromise = onSwipe(data[index], dir).then(() => console.log(`swiped`));\n        gone.add(index);\n      }\n\n      set((i) => {\n        if (index !== i) {\n          return;\n        }\n\n        const isGone = gone.has(index);\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0;\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0);\n        const scale = down ? 1.1 : 1;\n\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 },\n        };\n      });\n\n      if (!down && gone.size === data.length) {\n        swipePromise?.then(onFinish);   // eslint-disable-line no-unused-expressions\n        // setTimeout(() => gone.clear() || set((i) => to(i)), 600);\n      }\n    }\n  );\n\n  return <div className=\"deck\" style={{ position: `fixed` }}>\n    {props.map(({ x, y, rot, scale }, i) => (\n      <Card\n        key={i}\n        i={i}\n        x={x}\n        y={y}\n        rot={rot}\n        scale={scale}\n        trans={trans}\n        data={data}\n        bind={bind}\n      />\n    ))}\n  </div>;\n}\n\nexport default Deck;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Button } from \"@material-ui/core\";\n\nimport { useProfile } from \"../../providers/ProfileProvider\";\nimport { useProfileList } from \"../../providers/ProfileListProvider\";\nimport { useMatch } from \"../../providers/MatchProvider\";\nimport PromiseButton from \"../../components/PromiseButton\";\nimport Spinner from \"../../components/Spinner\";\nimport HomeTour from '../../tours/HomeTour';\nimport ResetTour from \"../../tours/ResetTour\";\nimport Deck from \"./Deck\";\n\nexport default function () {\n  const profileState = useProfile();\n  const profileListState = useProfileList();\n\n  const [ hydratedProfiles, setHydratedProfiles ] = useState();\n\n  const { profile } = profileState;\n  const { isLoading, skills, profiles } = profileListState;\n\n  useEffect(() => {\n    if(skills.length) {\n      const hydratedProfiles = profiles.map(profile => {\n        const profileSkills = skills.filter(skill => profile?.skills?.includes(skill.title));\n        const profileLookingFor = skills.filter(skill => profile?.lookingFor?.includes(skill.title));\n    \n        return { ...profile, skills: profileSkills, lookingFor: profileLookingFor };\n      });\n\n      setHydratedProfiles(hydratedProfiles);\n    }\n  }, [ profiles, skills ]);\n\n  return (\n    <>\n      <LoadingText />\n      <SetupText />\n      <ResetText />\n      <ErrorText />\n\n      {profile?.visible && !isLoading && !!hydratedProfiles?.length &&\n        <>\n          <Deck data={hydratedProfiles} />\n          <HomeTour />\n        </>\n      }\n\n    </>\n  );\n};\n\nfunction TextBox({ children }) {\n  return <Container className=\"nav-bar-margin\">\n    <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n      {children}\n    </div>\n  </Container>;\n};\n\nfunction SetupText() {\n  const { isLoading, failedToLoad, profile } = useProfile();\n\n  return (\n    (!isLoading && !failedToLoad) ? (\n      !profile.started ? \n      <TextBox>\n        Welcome! Let's get you set up. Head over to your <Link to=\"/profile/edit\">profile page</Link> to get started.\n      </TextBox> :\n  \n      !profile.completed ?\n      <TextBox>\n        Welcome back! Head over to your <Link to=\"/profile/edit\">profile page</Link> to complete your profile and start searching for potential teammates!\n      </TextBox> :\n  \n      !profile.visible ?\n      <TextBox>\n        Welcome back! Mark your profile \"visible\" from your <Link to=\"/profile\">profile page</Link> to start searching for potential teammates!\n      </TextBox> : null\n    ) : null\n  );\n};\n\nfunction LoadingText() {\n  const profileState = useProfile();\n  const profileListState = useProfileList();\n\n  return (\n    profileState.isLoading ?\n    <TextBox>\n      Fetching your profile... <br /> <Spinner />\n    </TextBox> :\n\n    profileListState.isLoading ?\n    <TextBox>\n      Finding the best hackers for you... <br /> <Spinner />\n    </TextBox> : null\n  );\n};\n\nfunction ResetText() {\n  const { profile } = useProfile();\n  const { isLoading, profiles } = useProfileList();\n  const { reset } = useMatch();\n\n  return (\n    (profile?.visible && !isLoading && !profiles.length) ?\n    <TextBox>\n      <p>\n        That's everybody! If you still haven't found your teammates, you can reset all your left swipes and start over.\n      </p>\n      <PromiseButton className=\"reset-button\" variant=\"contained\" color=\"primary\" onClick={reset}>Reset</PromiseButton>\n\n      <p>\n        Or if you have already found your teammates, you can mark your profile as not visible.\n      </p>\n      <Button className=\"mark-not-visibile-button\" variant=\"contained\" color=\"primary\">Mark not visible</Button>\n\n      <p className=\"wait-text\">\n        Or you can just wait for more people to join Lattice!\n      </p>\n\n      <ResetTour />\n    </TextBox> : null\n  );\n};\n\nfunction ErrorText() {\n  const profileState = useProfile();\n  const profileListState = useProfileList();\n\n  return (\n    profileState.failedToLoad ?\n    <TextBox>\n      There was an error fetching your profile <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={profileState.getProfile}>Retry</Button>\n    </TextBox> :\n\n    profileListState.failedToLoad ?\n    <TextBox>\n      There was an error fetching hackers <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={profileListState.getProfiles}>Retry</Button>\n    </TextBox> : null\n  );\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function({ show, onClose }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Success</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Your password has been successfully reset. You can now login with the new password.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport { Button, Container, Box } from '@material-ui/core';\nimport PassOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\nimport { useAuth } from '../../providers/AuthProvider';\nimport Spinner from '../../components/Spinner';\nimport useDialogControl from '../../components/DialogControl.hook';\nimport ResetAlert from './dialogs/reset-alert';\n\nexport default function () {\n  const { resetToken } = useParams();\n  const { getResetInfo, resetPassword } = useAuth();\n  const resetAlertDialog = useDialogControl();\n\n  const [ isLoading, setLoading ] = useState(true);\n  const [ failedToLoad, setFailedToLoad ] = useState(null);\n  const [ email, setEmail ] = useState(``);\n  const [ errors, setErrors ] = useState({});\n  const [ isSubmitting, setSubmitting ] = useState(false);\n  const [ failedToSubmit, setFailedToSubmit ] = useState(null);\n  const [ redirect, setRedirect ] = useState();\n\n  const onSubmit = async e => {\n    try {\n      e.preventDefault();\n      setSubmitting(true);\n      setErrors({});\n\n      const email = e.target.email.value;\n      const password = e.target.password.value;\n      const confirmPassword = e.target.confirmPassword.value;\n\n      if (!email) {\n        return setErrors({ email: `Invalid email, please check the link provided` });\n      }\n\n      if (!password) {\n        return setErrors({ password: `Please provide a password` });\n      }\n\n      if (password.length < 6) {\n        return setErrors({ password: `Password must be atleast 6 characters long` });\n      }\n\n      if (password !== confirmPassword) {\n        return setErrors({ confirmPassword: `Passwords don't match` });\n      }\n\n      await resetPassword(resetToken, password);\n    } catch (err) {\n      setFailedToSubmit(err);\n    } finally {\n      setSubmitting(false);\n      resetAlertDialog.open();\n    }\n  };\n\n  const done = () => {\n    resetAlertDialog.dismiss();\n    setRedirect(`/auth/login`);\n  };\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const email = await getResetInfo(resetToken);\n        setEmail(email);\n      } catch (err) {\n        setFailedToLoad(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [ getResetInfo, resetToken ]);\n\n  return (\n    <Container>\n      <form onSubmit={onSubmit}>\n        <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n        {isLoading ? <h1 className=\"title\">Loading...</h1> :\n          failedToLoad ?\n            <Box color=\"error.main\" textAlign=\"center\">\n              <h3>{failedToLoad.message}</h3>\n            </Box> :\n            <>\n              <h1 className=\"title\">Reset Password</h1>\n              <Box color=\"error.main\" textAlign=\"center\">{failedToSubmit && failedToSubmit.message}</Box>\n              <div className=\"mb4\">\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <MailOutlineIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Email Address</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <TextField name=\"email\" type=\"email\" fullWidth variant=\"outlined\" value={email} disabled={true} />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid item className=\"lattice-icon\">\n                    <PassOutlinedIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">New Password</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <TextField name=\"password\" type=\"password\" fullWidth variant=\"outlined\" />\n                    {errors.password &&\n                      <Box color=\"error.main\">{errors.password}</Box>\n                    }\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid item className=\"lattice-icon\">\n                    <PassOutlinedIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Confirm New Password</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <TextField name=\"confirmPassword\" type=\"password\" fullWidth variant=\"outlined\" />\n                    {errors.confirmPassword &&\n                      <Box color=\"error.main\">{errors.confirmPassword}</Box>\n                    }\n                  </Grid>\n                </Grid>\n                <Button\n                  type=\"submit\" \n                  variant=\"contained\"\n                  className=\"center\" \n                  color=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  {\n                    isSubmitting ? <Spinner size=\"25px\" /> : `Submit`\n                  }\n                </Button>\n              </div>\n            </>\n        }\n        </div>\n      </form>\n      <ResetAlert\n        show={resetAlertDialog.show}\n        onClose={done}\n      />\n      {redirect && <Redirect to={redirect} />}\n    </Container>\n  );\n}\n","import React from 'react';\nimport { useAuth } from '../providers/AuthProvider';\nimport { Redirect } from 'react-router-dom';\n\nexport default function({ children }) {\n  const { token } = useAuth();\n\n  if(token) return <Redirect to=\"/\" />\n\n  return children;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport HomeIcon from '@material-ui/icons/Home';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport { Badge } from '@material-ui/core';\nimport { useNotification } from '../providers/NotificationProvider';\n\nimport '../styles/Navigation.css';\n\nfunction NavAction({ navigate, ...rest }) {\n  return <BottomNavigationAction {...rest} />;\n}\n\nexport default function() {\n  return <>\n    <BottomNavigation className=\"bottomNavigation\" >\n      <Link to=\"/notifications\" className=\"notifications-link\">\n        <NavAction icon={<NotificationAction />} />\n      </Link>\n      <Link to=\"/\" className=\"home-link\">\n        <NavAction icon={<HomeIcon />} />\n      </Link>\n      <Link to=\"/profile\" className=\"profile-link\">\n        <NavAction icon={<PersonIcon />} />\n      </Link>\n    </BottomNavigation>\n  </>;\n};\n\nconst NotificationAction = () => {\n  const { failedToLoad, notifications } = useNotification();\n  const [ unreadCount, setUnreadCount ] = useState(0);\n \n  useEffect(() => {\n    const unreadCount = notifications.filter(({ notification: { read } }) => !read).length;\n    setUnreadCount(unreadCount);\n  }, [ notifications ]);\n  \n  return (\n    <Badge\n      badgeContent={failedToLoad ? `!` : unreadCount}\n      color={failedToLoad ? `error` : `primary`}\n    >\n      <NotificationsIcon />\n    </Badge>\n  );\n};\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useAuth } from '../providers/AuthProvider';\nimport Navigation from './Navigation';\n\nexport default function({ children }) {\n  const { token } = useAuth();\n\n  if(token === null) return <Redirect to=\"/auth/login\" />;\n\n  return <>{children}<Navigation /></>;\n};\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Register from '../pages/auth/Register';\nimport Login from '../pages/auth/Login';\nimport Notifications from '../pages/notifications/Notifications';\nimport Profile from '../pages/profile/Profile';\nimport ChangeProfile from '../pages/profile/ChangeProfile';\nimport Home from '../pages/home/Home';\nimport Reset from '../pages/auth/Reset';\nimport AuthRoute from './AuthRoute';\nimport AppRoute from './AppRoute';\n\nexport default function() {\n  return (\n    <BrowserRouter basename=\"/lattice\">\n      <Switch>\n        <Route path=\"/auth/register/:registrantId\">\n          <AuthRoute>\n            <Register />\n          </AuthRoute>\n        </Route>\n        <Route path=\"/auth/login\">\n          <AuthRoute>\n            <Login />\n          </AuthRoute>\n        </Route>\n        <Route path=\"/auth/reset/:resetToken\">\n          <AuthRoute>\n            <Reset />\n          </AuthRoute>\n        </Route>\n        <Route path=\"/notifications\">\n          <AppRoute>\n            <Notifications />\n          </AppRoute>\n        </Route>\n        <Route path=\"/profile/edit\">\n          <AppRoute>\n            <ChangeProfile />\n          </AppRoute>\n        </Route>\n        <Route path=\"/profile\">\n          <AppRoute>\n            <Profile />\n          </AppRoute>\n        </Route>\n        <Route path=\"/\">\n          <AppRoute>\n            <Home />\n          </AppRoute>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}","import React from 'react';\nimport Providers from './Providers';\nimport Routes from './Routes';\n\nexport default function() {\n  return <>\n    <Providers>\n      <Routes />\n    </Providers>\n  </>;\n}","import React from 'react';\nimport Layout from './layout/Layout';\n\nimport \"./styles/App.scss\"\n\nconst App = () => {\n  return <Layout />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    console.log(`The URL constructor is available in all browsers that support SW`);\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      console.log(`Our service worker won't work if PUBLIC_URL is on a different origin from what our page is served on. This might happen if a CDN is used to serve assets`);\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        console.log(`This is running on localhost. Let's check if a service worker still exists or not.`);\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        console.log('Is not localhost. Just register service worker');\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  console.log({ swUrl });\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      console.log({ registration });\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n      return registration;\n    })\n    .then(registration => {\n      if (config && config.onRegister) {\n        config.onRegister(registration);\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(`root`));\n\nserviceWorker.register();\n"],"sourceRoot":""}