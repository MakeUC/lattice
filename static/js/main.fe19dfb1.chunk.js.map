{"version":3,"sources":["services/Api.js","services/AuthService.js","providers/AuthProvider.js","services/ProfileService.js","providers/ProfileProvider.js","layout/Providers.js","pages/auth/Register.js","pages/auth/Login.js","pages/notifications/Notifications.js","components/PromiseButton.js","pages/profile/dialogs/toggle-visibility-confirmation.js","pages/profile/dialogs/toggle-visibility-alert.js","pages/profile/dialogs/logout-confirmation.js","pages/profile/Profile.js","pages/home/Card.js","pages/home/Deck.js","pages/home/Home.js","pages/auth/ForgotPassword.js","pages/profile/dialogs/profile-save-confirmation.js","pages/profile/ChangeProfile.js","layout/AuthRoute.js","layout/Navigation.js","layout/AppRoute.js","layout/Routes.js","layout/Layout.js","App.js","index.js"],"names":["apiHost","apiUrl","getRegistrantEmail","id","Axios","url","method","res","data","Error","response","message","register","registrantId","password","login","email","context","createContext","token","logout","AuthProvider","children","useState","setToken","useEffect","localStorage","getItem","a","AuthService","setItem","contextValue","removeItem","Provider","value","useAuth","useContext","getProfiles","headers","Authorization","getProfile","startProfile","updateProfile","profile","setVisible","visible","getSkills","isLoading","failedToLoad","skills","profiles","swipedProfiles","toggleVisibility","swipeProfile","ProfileProvider","setLoading","setFailedToLoad","setProfile","setSkills","setProfiles","setSwipedProfiles","useCallback","ProfileService","started","newProfile","to","match","includes","console","log","name","swiped","useProfile","useStyles","makeStyles","theme","margin","spacing","classes","useParams","setEmail","errors","setErrors","isSubmitting","setSubmitting","failedToSubmit","setFailedToSubmit","redirect","setRedirect","onSubmit","e","preventDefault","target","confirmPassword","length","Container","className","root","Box","color","textAlign","Grid","container","alignItems","item","TextField","type","fullWidth","variant","disabled","Button","InputWithIcon","href","action","size","maxWidth","marginTop","snackbar","backgroundColor","fontFamily","LongTextSnackbar","SnackbarContent","onClick","props","waiting","setWaiting","_onClick","show","onSuccess","onClose","Dialog","open","DialogTitle","DialogContent","DialogContentText","DialogActions","PromiseButton","toggleVisibilityConfirmationDialog","useDialogControl","toggleVisibilityAlertDialog","logoutConfirmationDialog","onToggleVisibility","dismiss","onLogout","slack","defaultShow","setShow","Card","i","x","y","rot","scale","trans","bind","idea","lookingFor","skillRows","slice","div","key","style","transform","interpolate","boxShadow","opacity","Math","abs","marginLeft","marginRight","marginBottom","borderRadius","paddingBottom","fontSize","map","row","index","padding","display","skill","title","icon","look","random","delay","r","s","Deck","Set","gone","useSprings","from","set","useGesture","args","down","xDelta","delta","xDir","distance","direction","velocity","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","setTimeout","clear","position","hydratedProfiles","setHydratedProfiles","hydratedProiles","profileSkills","filter","profileLookingFor","completed","useForm","setValue","handleSubmit","reset","watch","showConfirmationModal","setShowModal","required","validate","Object","keys","onModalDismiss","placeholder","inputRef","error","helperText","multiline","AssignmentTurnedIn","Autocomplete","multiple","filterSelectedOptions","options","getOptionLabel","option","renderInput","params","label","onChange","InputProps","startAdornment","InputAdornment","NavAction","navigate","rest","BottomNavigationAction","BottomNavigation","basename","path","AuthRoute","Register","ForgotPassword","AppRoute","ChangeProfile","Home","Providers","Routes","App","Layout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe19dfb1.chunk.js","sourcesContent":["const env = process.env.NODE_ENV;\n\nexport const apiHost =\n  (env === `development`) ?\n    `http://localhost:3000` :\n    `https://makeuc-registration-dev.herokuapp.com`;\n","import Axios from 'axios';\nimport { apiHost } from './Api';\n\nconst apiUrl = `${apiHost}/auth`;\n\nexport default {\n\n  async getRegistrantEmail(id) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/email/${id}`,\n        method: `GET`\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async register(registrantId, password) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/register`,\n        method: `POST`,\n        data: { registrantId, password }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async login(email, password) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/login`,\n        method: `POST`,\n        data: { email, password }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response?.data.message || `Cannot reach server, please try again later`);\n    }\n  }\n};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport AuthService from '../services/AuthService';\n\nconst tokenStorageKey = `lattice-token`;\n\nconst context = createContext({ \n  token: ``, \n  email: ``, \n  getRegistrantEmail() {}, \n  register() {},\n  login() {},\n  logout() {}\n});\n\nexport function AuthProvider({ children }) {\n  const [ token, setToken ] = useState(``);\n\n  useEffect(() => {\n    const token = localStorage.getItem(tokenStorageKey);\n    setToken(token);\n  }, []);\n\n  const getRegistrantEmail = registrantId => AuthService.getRegistrantEmail(registrantId);\n\n  const register = async (registrantId, password) => {\n    const token = await AuthService.register(registrantId, password);\n    setToken(token);\n    localStorage.setItem(tokenStorageKey, token);\n  };\n\n  const login = async (email, password) => {\n    const token = await AuthService.login(email, password);\n    setToken(token);\n    localStorage.setItem(tokenStorageKey, token);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(tokenStorageKey);\n    setToken(null);\n  };\n\n  const contextValue = {\n    token, getRegistrantEmail, register, login, logout\n  };\n\n  return <context.Provider value={contextValue}>{children}</context.Provider>;\n};\n\nexport const useAuth = () => useContext(context);\n","import Axios from 'axios';\nimport { apiHost } from './Api';\n\nconst apiUrl = `${apiHost}/profile`;\n\nexport default {\n  async getProfiles({ token }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/list`,\n        method: `GET`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async getProfile({ token }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/`,\n        method: `GET`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async startProfile({ token }) {\n    try {\n      await Axios({\n        url: `${apiUrl}/start`,\n        method: `POST`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async updateProfile({ token, profile }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/`,\n        method: `PUT`,\n        data: profile,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async setVisible({ token, visible }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/visible`,\n        method: `PUT`,\n        data: { visible },\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async getSkills({ token }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/skills`,\n        method: `GET`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  }\n};","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport ProfileService from '../services/ProfileService';\nimport { useAuth } from './AuthProvider';\n\nconst context = createContext({\n  isLoading: true, failedToLoad: null, profile: {},\n  skills: [], profiles: [], swipedProfiles: [],\n  getProfile() {}, updateProfile() {}, toggleVisibility() {},\n  getSkills() {}, getProfiles() {}, swipeProfile() {}\n});\n\nexport function ProfileProvider({ children }) {\n  const { token } = useAuth();\n\n  const [ isLoading, setLoading ] = useState(true);\n  const [ failedToLoad, setFailedToLoad ] = useState(null);\n  const [ profile, setProfile ] = useState({});\n  const [ skills, setSkills ] = useState([]);\n\n  const [ profiles, setProfiles ] = useState([]);\n  const [ swipedProfiles, setSwipedProfiles ] = useState([]);\n\n  const getProfile = useCallback(async () => {\n    try {\n      setLoading(true);\n      setFailedToLoad(null);\n\n      const profile = await ProfileService.getProfile({ token });\n\n      setProfile(profile);\n\n      if(!profile.started) {\n        ProfileService.startProfile({ token });\n      }\n    } catch (err) {\n      setFailedToLoad(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [ token ]);\n\n  const getSkills = useCallback(async () => {\n    const skills = await ProfileService.getSkills({ token });\n    setSkills(skills);\n  }, [ token ]);\n  \n  const getProfiles = useCallback(async () => {\n    setProfiles([]);\n    const profiles = await ProfileService.getProfiles({ token });\n    setProfiles(profiles);\n  }, [ token ]);\n\n  useEffect(() => {\n    token && getProfile();\n  }, [ token, getProfile ]);\n\n  useEffect(() => {\n    token && getSkills();\n  }, [ token, getSkills ]);\n\n  useEffect(() => {\n    token && getProfiles();\n  }, [ token, getProfiles ]);\n\n  const updateProfile = async profile => {\n    const newProfile = await ProfileService.updateProfile({ token, profile });\n    setProfile(newProfile);\n  };\n\n  const toggleVisibility = async () => {\n    const newProfile = await ProfileService.setVisible({ token, visible: !profile.visible });\n    setProfile(newProfile);\n  };\n\n  const swipeProfile = async (to, match) => {\n    if(swipedProfiles.includes(to)) return;\n    console.log(`swiping ${to.name} ${match}`);\n    setSwipedProfiles(swiped => [ ...swiped, to ]);\n  };\n\n  const contextValue = {\n    isLoading, failedToLoad, profile,\n    skills, profiles, swipedProfiles,\n    getProfile, getSkills, getProfiles,\n    updateProfile, toggleVisibility, swipeProfile\n  };\n\n  return <context.Provider value={contextValue}>{children}</context.Provider>;\n};\n\nexport const useProfile = () => useContext(context);\n","import React from 'react';\nimport { AuthProvider } from '../providers/AuthProvider';\nimport { ProfileProvider } from '../providers/ProfileProvider';\n\nexport default function({ children }) {\n  return <>\n    <AuthProvider>\n      <ProfileProvider>\n        {children}\n      </ProfileProvider>\n    </AuthProvider>\n  </>;\n}","import React, { useEffect, useState } from 'react';\nimport { useParams, Redirect, Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport PassOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\nimport { Button, Container, Box } from '@material-ui/core';\n\nimport { useAuth } from '../../providers/AuthProvider';\n\nimport \"../../styles/Form.scss\"\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function () {\n  const classes = useStyles();\n  const { token, getRegistrantEmail, register } = useAuth();\n  const { registrantId } = useParams();\n\n  const [isLoading, setLoading] = useState(true);\n  const [failedToLoad, setFailedToLoad] = useState(null);\n  const [email, setEmail] = useState(``);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setSubmitting] = useState(false);\n  const [failedToSubmit, setFailedToSubmit] = useState(null);\n  const [redirect, setRedirect] = useState(``);\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const email = await getRegistrantEmail(registrantId);\n        setEmail(email);\n      } catch (err) {\n        setFailedToLoad(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [getRegistrantEmail, registrantId]);\n\n  useEffect(() => { token && setRedirect(`/`) }, [token]);\n\n  const onSubmit = async e => {\n    try {\n      e.preventDefault();\n      setSubmitting(true);\n      setErrors({});\n\n      const email = e.target.email.value;\n      const password = e.target.password.value;\n      const confirmPassword = e.target.confirmPassword.value;\n\n      if (!email) {\n        return setErrors({ email: `Invalid email, please check the link provided` });\n      }\n\n      if (!password) {\n        return setErrors({ password: `Please provide a password` });\n      }\n\n      if (password.length < 6) {\n        return setErrors({ password: `Password must be atleast 6 characters long` });\n      }\n\n      if (password !== confirmPassword) {\n        return setErrors({ confirmPassword: `Passwords don't match` });\n      }\n\n      await register(registrantId, password);\n    } catch (err) {\n      setFailedToSubmit(err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Container className={classes.root}>\n      <form onSubmit={onSubmit}>\n        <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n          {isLoading ? <h1 className=\"title\">Loading...</h1> :\n            failedToLoad ?\n              <Box color=\"error.main\" textAlign=\"center\">\n                <h3>{failedToLoad.message}</h3>\n              </Box> :\n              <>\n                <h1 className=\"title\">Create Account</h1>\n                <Box color=\"error.main\" textAlign=\"center\">{failedToSubmit && failedToSubmit.message}</Box>\n                <div className={classes.margin + \" font-opensans\"}>\n                  <Grid container spacing={4} className=\"lattice-form-band\" alignItems=\"flex-end\">\n                    <Grid className=\"lattice-icon\" item>\n                      <MailOutlineIcon />\n                    </Grid>\n                    <p className=\"lattice-form-label mb0 font-gray\">Email Address</p>\n                    <Grid item className=\"lattice-form-input\">\n                      <TextField name=\"email\" type=\"email\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" value={email} disabled={true} />\n                      {errors.email &&\n                        <Box color=\"error.main\">{errors.email}</Box>\n                      }\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={4} className=\"lattice-form-band\" alignItems=\"flex-end\">\n                    <Grid item className=\"lattice-icon\">\n                      <PassOutlinedIcon />\n                    </Grid>\n                    <p className=\"lattice-form-label mb0 font-gray\">Password</p>\n                    <Grid item className=\"lattice-form-input\">\n                      <TextField name=\"password\" type=\"password\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" />\n                      {errors.password &&\n                        <Box color=\"error.main\">{errors.password}</Box>\n                      }\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={4} className=\"lattice-form-band\" alignItems=\"flex-end\">\n                    <Grid item className=\"lattice-icon\">\n                      <PassOutlinedIcon />\n                    </Grid>\n                    <p className=\"lattice-form-label mb0 font-gray\">Confirm Password</p>\n                    <Grid item className=\"lattice-form-input\">\n                      <TextField name=\"confirmPassword\" type=\"password\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" />\n                      {errors.confirmPassword &&\n                        <Box color=\"error.main\">{errors.confirmPassword}</Box>\n                      }\n                    </Grid>\n                  </Grid>\n                  <input type=\"hidden\" name=\"registrantId\" value={registrantId} />\n                  <Button type=\"submit\" variant=\"contained\" className=\"center\" color=\"primary\" disabled={isSubmitting}>Sign Up</Button>\n                  <Box className=\"mt4\">Already registered? Log in <Link to=\"/auth/login\">here</Link></Box>\n                </div>\n              </>\n          }\n        </div>\n      </form>\n      {redirect && <Redirect to={redirect} />}\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport PassOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\nimport { Button, Box } from '@material-ui/core';\nimport Container from \"@material-ui/core/Container\";\n\nimport { useAuth } from '../../providers/AuthProvider';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function InputWithIcon() {\n  const classes = useStyles();\n  const { token, login } = useAuth();\n  const [ errors, setErrors ] = useState({});\n  const [ isSubmitting, setSubmitting ] = useState(false);\n  const [ failedToSubmit, setFailedToSubmit ] = useState(null);\n  const [ redirect, setRedirect ] = useState(``);\n  \n  useEffect(() => {token && setRedirect(`/`)}, [ token ]);\n\n  const onSubmit = async e => {\n    try {\n      e.preventDefault();\n      setSubmitting(true);\n      setErrors({});\n\n      const email = e.target.email.value;\n      const password = e.target.password.value;\n\n      if(!email) {\n        return setErrors({ email: `Please provide an email` });\n      }\n\n      if(!password) {\n        return setErrors({ password: `Please provide a password` });\n      }\n\n      await login(email, password);\n    } catch(err) {\n      setFailedToSubmit(err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={onSubmit}>\n        <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n          <h1 className=\"title\">Lattice Log In</h1>\n          <div className=\"font-opensans tc mb3\">\n            <p className=\"mb4\">\n              Discover and connect with MakeUC 2020 hackers from across the world!\n            </p>\n            <Box color=\"error.main\" textAlign=\"center\">{failedToSubmit && failedToSubmit.message}</Box>\n            <div className={classes.margin}>\n              <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                <Grid className=\"lattice-icon\" item>\n                  <MailOutlineIcon />\n                </Grid>\n                <p className=\"lattice-form-label mb0 font-gray\">Email Address</p>\n                <Grid item className=\"lattice-form-input\">\n                  <TextField name=\"email\" type=\"email\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" />\n                    {errors.email &&\n                      <Box color=\"error.main\">{errors.email}</Box>\n                    }\n                </Grid>\n              </Grid>\n              <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                <Grid item className=\"lattice-icon\">\n                  <PassOutlinedIcon />\n                </Grid>\n                <p className=\"lattice-form-label mb0 font-gray\">Password</p>\n                <Grid item className=\"lattice-form-input\">\n                  <TextField name=\"password\" type=\"password\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" />\n                    {errors.password &&\n                      <Box color=\"error.main\">{errors.password}</Box>\n                    }\n                </Grid>\n              </Grid>\n            </div>\n            <Button type=\"submit\" variant=\"contained\" className=\"center\" color=\"primary\" disabled={isSubmitting}>Sign In</Button>\n            <Box className=\"mt4\">Don't have an account? Contact us at <a href=\"mailto:info@makeuc.io\">info@makeuc.io</a> for an invite link</Box>\n          </div>\n        </div>\n      </form>\n      {redirect && <Redirect to={redirect} />}\n    </Container>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles} from '@material-ui/core/styles';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Container from \"@material-ui/core/Container\";\n\nconst action = (\n    <Button className=\"font-secondary-dark\" size=\"small\">\n        <LaunchIcon className=\"font-secondary-dark\"/>\n    </Button>\n);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 600,\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n    snackbar: {\n        backgroundColor: '#8174ff',\n        fontFamily: 'Open Sans'\n    }\n}));\n\nexport default function LongTextSnackbar() {\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.root + \" nav-bar-margin\"}>\n            <div className=\"pa4\">\n                <SnackbarContent className={classes.snackbar} message=\"You matched with {{ user.name }}\" action={action}/>\n            </div>\n        </Container>\n    );\n}\n","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\n\nexport default function({ onClick, children, ...props }) {\n  const [ waiting, setWaiting ] = useState();\n\n  const _onClick = async (...args) => {\n    try {\n      setWaiting(true);\n      await onClick(...args);\n    } finally {\n      setWaiting(false);\n    }\n  }\n\n  return <Button {...props} onClick={_onClick} disabled={waiting}>{children}</Button>;\n};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PromiseButton from '../../../components/PromiseButton';\n\nexport default function({ show, onSuccess, onClose, visible }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Are you sure</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Mark you profile {visible ? ` not` : ``} visible?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <PromiseButton onClick={onSuccess} color=\"primary\">\n            Yes\n          </PromiseButton>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function({ show, onClose, visible }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Success</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Your profile is now {visible ? ` ` : ` not`} visible.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PromiseButton from '../../../components/PromiseButton';\n\nexport default function({ show, onSuccess, onClose }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Logout</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to log out?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <PromiseButton onClick={onSuccess} color=\"primary\">\n            Yes\n          </PromiseButton>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport PersonIcon from '@material-ui/icons/Person';\nimport SlackIcon from '@material-ui/icons/AlternateEmail';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport { Button, Container } from '@material-ui/core';\n\nimport { useAuth } from '../../providers/AuthProvider';\nimport { useProfile } from '../../providers/ProfileProvider';\nimport PromiseButton from '../../components/PromiseButton';\nimport ToggleVisibilityConfirmation from './dialogs/toggle-visibility-confirmation';\nimport ToggleVisibilityAlert from './dialogs/toggle-visibility-alert';\nimport LogoutConfirmation from './dialogs/logout-confirmation';\n\nimport '../../styles/Profile.scss'\n\nexport default function() {\n  const { isLoading, profile, toggleVisibility } = useProfile();\n  const { logout } = useAuth();\n\n  const [ redirect, setRedirect ] = useState();\n  const toggleVisibilityConfirmationDialog = useDialogControl();\n  const toggleVisibilityAlertDialog = useDialogControl();\n  const logoutConfirmationDialog = useDialogControl();\n\n  const redirectToProfileForm = () => setRedirect(`/profile/edit`);\n\n  const onToggleVisibility = async () => {\n    await toggleVisibility();\n    toggleVisibilityConfirmationDialog.dismiss();\n    toggleVisibilityAlertDialog.open();\n  };\n\n  const onLogout = async () => {\n    await logout();\n    logoutConfirmationDialog.dismiss();\n  };\n\n  return (\n    <Container className=\"nav-bar-margin\">\n      <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n        <h1 className=\"title\">Lattice Account</h1>\n          {isLoading ? `Loading...` :\n            <>\n              <div className=\"mb4\">\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <PersonIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">{profile?.name}</p>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <MailOutlineIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">{profile?.email}</p>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid item className=\"lattice-icon\">\n                    <SlackIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">{profile?.slack}</p>\n                </Grid>\n              </div>\n\n              <Button\n                variant=\"contained\"\n                className=\"center profile-button\"\n                color=\"primary\"\n                onClick={redirectToProfileForm}\n              >Edit Profile</Button>\n\n              <PromiseButton\n                variant=\"contained\"\n                className=\"center profile-button\"\n                color=\"primary\"\n                onClick={toggleVisibilityConfirmationDialog.open}\n              >\n                {profile.visible ?\n                  <>\n                    <VisibilityIcon /> &nbsp; Mark Not Visible\n                  </> :\n                  <>\n                    <VisibilityOffIcon /> &nbsp; Mark Visible\n                  </>\n                }\n              </PromiseButton>\n\n              <Button\n                variant=\"contained\"\n                className=\"center profile-button\"\n                color=\"primary\"\n              >Change Password</Button>\n\n              <Button\n                variant=\"contained\"\n                className=\"center profile-button\"\n                color=\"primary\"\n                onClick={logoutConfirmationDialog.open}\n              >Logout</Button>\n            </>\n          }\n          <ToggleVisibilityConfirmation\n            show={toggleVisibilityConfirmationDialog.show}\n            onClose={toggleVisibilityConfirmationDialog.dismiss}\n            onSuccess={onToggleVisibility}\n            visible={profile.visible}\n          />\n          <ToggleVisibilityAlert\n            show={toggleVisibilityAlertDialog.show}\n            onClose={toggleVisibilityAlertDialog.dismiss}\n            visible={profile.visible}\n          />\n          <LogoutConfirmation\n            show={logoutConfirmationDialog.show}\n            onClose={logoutConfirmationDialog.dismiss}\n            onSuccess={onLogout}\n          />\n          {redirect && <Redirect to={redirect} />}\n      </div>\n    </Container>\n  );\n}\n\nfunction useDialogControl(defaultShow = false) {\n  const [ show, setShow ] = useState(defaultShow);\n  \n  const open = () => setShow(true);\n  const dismiss = () => setShow(false);\n\n  return { show, open, dismiss };\n};\n","import React from \"react\";\nimport { string, array } from \"prop-types\";\nimport { animated, interpolate } from \"react-spring/hooks\";\n\nimport \"../../styles/Card.scss\";\n\nconst Card = ({ i, x, y, rot, scale, trans, bind, data }) => {\n  const { skills, name, idea, lookingFor } = data[i];\n\n  const skillRows = [skills.slice(0, 3), skills.slice(3, 6)];\n\n  return (\n    <animated.div\n      key={i}\n      style={{\n        transform: interpolate(\n          [x, y],\n          (x, y) => `translate3d(${x}px,${y}px,0)`\n        )\n      }}\n    >\n      <animated.div\n        {...bind(i)}\n        style={{\n          transform: interpolate([rot, scale], trans),\n          boxShadow: interpolate(\n            [x], (x) => {\n              if(x > -5 && x < 5) return null;\n              const opacity = Math.abs(x)/300;\n              const color = x > 0 ? `rgba(0, 255, 0, ${opacity})` : `rgba(255, 0, 0, ${opacity})`;\n              return `${x*1.5}px 0 80px -80px ${color} inset`;\n            }\n          )\n        }}\n      >\n        <div className=\"font-opensans\"\n          style={{\n            textAlign: `center`,\n          }}\n        >\n          <h2 className=\"name\">\n            {name}\n          </h2>\n          <h3>Project Idea</h3>\n          <div\n            style={{\n              marginTop: `-5px`,\n              marginLeft: `15px`,\n              marginRight: `15px`,\n              marginBottom: `35px`,\n              borderRadius: `10px`,\n              paddingBottom: `0px`,\n            }}\n          >\n            <p\n              style={{\n                fontSize: `13px`,\n              }}\n            >\n              {idea}\n            </p>\n          </div>\n          <h3>Offering</h3>\n          {skillRows.map(\n            (row, index) =>\n              !!row.length && (\n                <div\n                  key={index}\n                  style={{\n                    padding: `25px`,\n                    paddingBottom: `10px`,\n                    marginTop: `-45px`,\n                    marginLeft: `15px`,\n                    marginRight: `15px`,\n                    display: `flex`,\n                    borderRadius: `10px`,\n                  }}\n                >\n                  {row.map((skill) => (\n                    <i\n                      key={skill.title}\n                      className={skill.icon}\n                      style={{\n                        padding: `10px`,\n                        fontSize: `50px`,\n                      }}\n                    />\n                  ))}\n                </div>\n              )\n          )}\n          <h3>Looking For</h3>\n          <div\n            style={{\n              padding: `25px`,\n              marginTop: `-45px`,\n              marginLeft: `15px`,\n              marginRight: `15px`,\n              display: `flex`,\n              borderRadius: `10px`,\n            }}\n          >\n            {lookingFor.map((look) => (\n              <i\n                key={look.title}\n                className={look.icon}\n                style={{\n                  padding: `10px`,\n                  fontSize: `50px`,\n                }}\n              ></i>\n            ))}\n          </div>\n        </div>\n      </animated.div>\n    </animated.div>\n  );\n};\n\nCard.propTypes = {\n  skills: array,\n  name: string,\n  idea: string,\n  lookingFor: array,\n};\n\nexport default Card;\n","import React, { useState } from 'react';\nimport { useSprings } from 'react-spring/hooks';\nimport { useGesture } from 'react-with-gesture';\n\nimport { useProfile } from \"../../providers/ProfileProvider\";\nimport Card from './Card';\n\nimport '../../styles/Deck.css';\n\nconst to = (i) => ({\n  x: 0,\n  y: i * -3,\n  scale: 1,\n  rot: -5 + Math.random() * 10,\n  delay: i * 100,\n});\n\nconst from = (i) => ({ rot: 0, scale: 1.5, y: -1000 });\n\nconst trans = (r, s) =>\n  `perspective(1500px) rotateX(10deg) rotateY(${\n    r / 10\n  }deg) rotateZ(${r}deg) scale(${s})`;\n\nfunction Deck({ data }) {\n  const { swipeProfile, getProfiles } = useProfile();\n\n  const [gone] = useState(() => new Set());\n\n  const [props, set] = useSprings(data.length, (i) => ({\n    ...to(i),\n    from: from(i),\n  }));\n\n  const onSwipe = (profile, direction) => {\n    swipeProfile(profile, (direction === 1));\n  };\n\n  const onFinish = () => {\n    console.log(`onFinish: End of cards`);\n    getProfiles();\n  };\n\n  const bind = useGesture(\n    ({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity,\n    }) => {\n      const trigger = velocity > 0.2;\n      const dir = xDir < 0 ? -1 : 1;\n\n      if (!down && trigger) {\n        onSwipe(data[index], dir);\n        gone.add(index);\n      }\n\n      set((i) => {\n        if (index !== i) {\n          return;\n        }\n\n        const isGone = gone.has(index);\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0;\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0);\n        const scale = down ? 1.1 : 1;\n\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 },\n        };\n      });\n\n      if (!down && gone.size === data.length) {\n        onFinish();\n        setTimeout(() => gone.clear() || set((i) => to(i)), 600);\n      }\n    }\n  );\n\n  return <div className=\"deck\" style={{ position: `fixed` }}>\n    {props.map(({ x, y, rot, scale }, i) => (\n      <Card\n        key={i}\n        i={i}\n        x={x}\n        y={y}\n        rot={rot}\n        scale={scale}\n        trans={trans}\n        data={data}\n        bind={bind}\n      />\n    ))}\n  </div>;\n}\n\nexport default Deck;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Deck from \"./Deck\";\nimport { useProfile } from \"../../providers/ProfileProvider\";\nimport { Container } from \"@material-ui/core\";\n\nexport default function () {\n  const { isLoading, profile, profiles, skills } = useProfile();\n  const [ hydratedProfiles, setHydratedProfiles ] = useState();\n\n  useEffect(() => {\n    if(skills.length) {\n      const hydratedProiles = profiles.map(profile => {\n        const profileSkills = skills.filter(skill => profile?.skills?.includes(skill.title));\n        const profileLookingFor = skills.filter(skill => profile?.lookingFor?.includes(skill.title));\n    \n        return { ...profile, skills: profileSkills, lookingFor: profileLookingFor };\n      });\n\n      setHydratedProfiles(hydratedProiles);\n    }\n  }, [ profiles, skills ]);\n\n  return (\n    <>\n      {profile.visible ?\n        (hydratedProfiles?.length ?\n          <Deck data={hydratedProfiles} /> :\n          <Container className=\"nav-bar-margin\">\n            <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n              Loading profiles...\n            </div>\n          </Container>\n        ) :\n        <Container className=\"nav-bar-margin\">\n          <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n            {isLoading ? `Loading...` :\n              !profile.started ? \n                <>\n                  Welcome! Let's get you set up. Head over to your <Link to=\"/profile/edit\">profile page</Link> to get started.\n                </> :\n                !profile.completed ?\n                  <>\n                    Welcome back! Head over to your <Link to=\"/profile/edit\">profile page</Link> to complete your profile and start searching for potential teammates!\n                  </> :\n                  <>\n                    Welcome back! Mark your profile \"visible\" from your <Link to=\"/profile\">profile page</Link> to start searching for potential teammates!\n                  </>\n            }\n          </div>\n        </Container>\n      }\n    </>\n  );\n}\n","import React from 'react';\n// import {makeStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport {Button, Container} from '@material-ui/core';\n/* \nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1)\n    }\n})); */\n\nexport default function () {\n    // const classes = useStyles();\n\n    return (\n        <Container>\n            <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n                <h1 className=\"title\">Reset Password</h1>\n                <div className=\"mb4\">\n                    <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                        <Grid className=\"lattice-icon\" item>\n                            <MailOutlineIcon/>\n                        </Grid>\n                        <p className=\"lattice-form-label mb0 font-gray\">Email Address</p>\n                        <Grid item className=\"lattice-form-input\">\n                            <TextField id=\"input-with-icon-grid\" fullWidth variant=\"outlined\"/>\n                        </Grid>\n                    </Grid>\n                    <Button variant=\"contained\" className=\"center\" color=\"primary\">Send Reset Instructions</Button>\n                </div>\n\n            </div>\n        </Container>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function({ show, onClose }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Success</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Your profile was sucessfully updated.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Next\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport SlackIcon from '@material-ui/icons/AlternateEmail';\nimport PersonIcon from '@material-ui/icons/Person';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { Button, Container, InputAdornment, Box } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { AssignmentTurnedIn } from \"@material-ui/icons\";\n\nimport { useProfile } from \"../../providers/ProfileProvider\";\nimport ConfirmationDialog from './dialogs/profile-save-confirmation';\n\nimport \"../../styles/Form.scss\"\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function() {\n  const classes = useStyles();\n  const { register, setValue, handleSubmit, errors, reset, watch } = useForm();\n  const { isLoading, profile, skills, updateProfile } = useProfile();\n\n  const [ isSubmitting, setSubmitting ] = useState(false);\n  const [ failedToSubmit, setFailedToSubmit ] = useState(``);\n  const [ showConfirmationModal, setShowModal ] = useState(false);\n  const [ redirect, setRedirect ] = useState();\n\n  useEffect(()=> {\n    register({ name: `skills` }, {\n      required: true,\n      validate: value => value.length <= 6\n    });\n    register({ name: `lookingFor` }, {\n      required: true,\n      validate: value => value.length <= 3\n    });\n  }, [ register ]);\n\n  useEffect(() => {\n    const profileSkills = skills.filter(skill => profile?.skills?.includes(skill.title));\n    const profileLookingFor = skills.filter(skill => profile?.lookingFor?.includes(skill.title));\n\n    reset({ ...profile, skills: profileSkills, lookingFor: profileLookingFor });\n  }, [ reset, skills, profile ]);\n\n  useEffect(() => {\n    setFailedToSubmit(!!Object.keys(errors).length && `Please fix the above errors`);\n  }, [ errors ]);\n\n  const onSubmit = async data => {\n    try {\n      setSubmitting(true);\n\n      const skills = data.skills.map(s => s.title);\n      const lookingFor = data.lookingFor.map(s => s.title);\n\n      await updateProfile({ ...data, skills, lookingFor });\n\n      setShowModal(true);\n    } catch(err) {\n      setFailedToSubmit(err.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const onModalDismiss = () => {\n    setShowModal(false);\n    setRedirect(`/profile`);\n  };\n\n  const profileSkills = watch(`skills`) || [];\n  const profileLookingFor = watch(`lookingFor`)|| [];\n\n  return (\n    <Container className={classes.root + \" nav-bar-margin\"}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n          <h1 className=\"title\">Your Profile</h1>\n          {isLoading ? `Loading...` :\n            <>\n              <div className={classes.margin + \" font-opensans\"}>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <PersonIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Full name</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <TextField\n                      fullWidth\n                      name=\"name\"\n                      id=\"input-with-icon-grid\"\n                      variant=\"outlined\" \n                      placeholder=\"John Doe\"\n                      inputRef={register({ required: `This field is required` })}\n                      error={!!errors.name}\n                      helperText={errors.name?.message || `Every hacker needs a public identity.`}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid item className=\"lattice-icon\">\n                    <DescriptionIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Project Idea</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <TextField\n                      fullWidth\n                      multiline\n                      name=\"idea\"\n                      id=\"input-with-icon-grid\"\n                      variant=\"outlined\"\n                      placeholder=\"A coronavirus map\"\n                      inputRef={register({ required: `This field is required` })}\n                      error={!!errors.idea}\n                      helperText={errors.idea?.message || `Share your innovative idea. It's fine if you don't have one.`}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <AssignmentTurnedIn />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Your skills</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <Autocomplete\n                      multiple\n                      filterSelectedOptions\n                      id=\"tags-outlined\"\n                      options={skills} // TODO: Need to be taken from DB ideally\n                      getOptionLabel={(option) => option.title}\n                      value={profileSkills}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"\"\n                          placeholder=\"Skills\"\n                          error={!!errors.skills}\n                          helperText={(errors.skills?.type === `required`) ?\n                            `Please select atleast one` :\n                            `Please select no more than 6`\n                          }\n                        />\n                      )}\n                      onChange={(e, skills) => setValue(`skills`, skills)}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <AssignmentTurnedIn />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Looking For</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <Autocomplete\n                      multiple\n                      id=\"tags-outlined\"\n                      options={skills} // TODO: Need to be taken from DB ideally\n                      getOptionLabel={(option) => option.title}\n                      filterSelectedOptions\n                      value={profileLookingFor}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"\"\n                          placeholder=\"Skills\"\n                          error={!!errors.lookingFor}\n                          helperText={(errors.lookingFor?.type === `required`) ?\n                            `Please select atleast one` :\n                            `Please select no more than 3`\n                          }\n                        />\n                      )}\n                      onChange={(e, skills) => setValue(`lookingFor`, skills)}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid item className=\"lattice-icon\">\n                    <SlackIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Slack handle</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <TextField\n                      fullWidth\n                      name=\"slack\"\n                      id=\"input-with-icon-grid\"\n                      variant=\"outlined\"\n                      inputRef={register({ required: `This field is required` })}\n                      InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">@</InputAdornment>\n                      }}\n                      error={!!errors.slack}\n                      helperText={errors.slack?.message || `Please provide the handle you have on the MakeUC Slack. Your matches will use this to contact you.`}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                className=\"center\"\n                color=\"primary\"\n                disabled={isSubmitting}\n              >Save</Button>\n              {failedToSubmit &&\n                <Box color=\"error.main\" className=\"mt2\">{failedToSubmit}</Box>\n              }\n            </>\n          }\n        </div>\n      </form>\n      <ConfirmationDialog show={showConfirmationModal} onClose={onModalDismiss}>\n        <h2>Success</h2>\n        <p>Your profile was sucessfully updated.</p>\n        <Button\n          variant=\"contained\"\n          className=\"center\"\n          color=\"primary\"\n          onClick={onModalDismiss}\n        >Next</Button>\n      </ConfirmationDialog>\n      {redirect && <Redirect to={redirect} />}\n    </Container>\n  );\n};\n","import React from 'react';\nimport { useAuth } from '../providers/AuthProvider';\nimport { Redirect } from 'react-router-dom';\n\nexport default function({ children }) {\n  const { token } = useAuth();\n\n  if(token) return <Redirect to=\"/\" />\n\n  return children;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport HomeIcon from '@material-ui/icons/Home';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport '../styles/Navigation.css';\n\nfunction NavAction({ navigate, ...rest }) {\n  return <BottomNavigationAction {...rest} />;\n}\n\nexport default function() {\n  return <>\n    <BottomNavigation className=\"bottomNavigation\" >\n      <Link to=\"/notifications\">\n        <NavAction icon={<NotificationsIcon />} />\n      </Link>\n      <Link to=\"/\">\n        <NavAction icon={<HomeIcon />} />\n      </Link>\n      <Link to=\"/profile\">\n        <NavAction icon={<PersonIcon />} />\n      </Link>\n    </BottomNavigation>\n  </>;\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useAuth } from '../providers/AuthProvider';\nimport Navigation from './Navigation';\n\nexport default function({ children }) {\n  const { token } = useAuth();\n\n  if(token === null) return <Redirect to=\"/auth/login\" />;\n\n  return <>{children}<Navigation /></>;\n};\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Register from '../pages/auth/Register';\nimport Login from '../pages/auth/Login';\nimport Notifications from '../pages/notifications/Notifications';\nimport Profile from '../pages/profile/Profile';\nimport Home from '../pages/home/Home';\nimport ForgotPassword from \"../pages/auth/ForgotPassword\";\nimport ChangeProfile from \"../pages/profile/ChangeProfile\";\nimport AuthRoute from './AuthRoute';\nimport AppRoute from './AppRoute';\n\nexport default function() {\n  return (\n    <BrowserRouter basename=\"/lattice\">\n      <Switch>\n        <Route path=\"/auth/register/:registrantId\">\n          <AuthRoute>\n            <Register />\n          </AuthRoute>\n        </Route>\n        <Route path=\"/auth/login\">\n          <AuthRoute>\n            <Login />\n          </AuthRoute>\n        </Route>\n        <Route path=\"/auth/reset\">\n          <AuthRoute>\n            <ForgotPassword />\n          </AuthRoute>\n        </Route>\n        <Route path=\"/notifications\">\n          <AppRoute>\n            <Notifications />\n          </AppRoute>\n        </Route>\n        <Route path=\"/profile/edit\">\n          <AppRoute>\n            <ChangeProfile />\n          </AppRoute>\n        </Route>\n        <Route path=\"/profile\">\n          <AppRoute>\n            <Profile />\n          </AppRoute>\n        </Route>\n        <Route path=\"/\">\n          <AppRoute>\n            <Home />\n          </AppRoute>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}","import React from 'react';\nimport Providers from './Providers';\nimport Routes from './Routes';\n\nexport default function() {\n  return <>\n    <Providers>\n      <Routes />\n    </Providers>\n  </>;\n}","import React from 'react';\nimport Layout from './layout/Layout';\n\nimport \"./styles/App.scss\"\n\nconst App = () => {\n  return <Layout />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(`root`));\n"],"sourceRoot":""}