{"version":3,"sources":["services/Api.js","services/AuthService.js","providers/AuthProvider.js","services/ProfileService.js","providers/ProfileProvider.js","services/MatchService.js","providers/ProfileListProvider.js","providers/MatchProvider.js","services/NotificationService.js","providers/NotificationProvider.js","layout/Providers.js","pages/auth/Register.js","pages/auth/Login.js","components/DialogControl.hook.js","pages/notifications/dialogs/notification-details.js","pages/notifications/Notifications.js","components/PromiseButton.js","pages/profile/dialogs/toggle-visibility-confirmation.js","pages/profile/dialogs/toggle-visibility-alert.js","pages/profile/dialogs/logout-confirmation.js","pages/profile/Profile.js","pages/home/Card.js","pages/home/Deck.js","pages/home/Home.js","pages/auth/ForgotPassword.js","pages/profile/dialogs/profile-save-confirmation.js","pages/profile/ChangeProfile.js","layout/AuthRoute.js","layout/Navigation.js","layout/AppRoute.js","layout/Routes.js","layout/Layout.js","App.js","index.js"],"names":["apiHost","apiUrl","getRegistrantEmail","id","Axios","url","method","res","data","Error","response","message","register","registrantId","password","login","email","context","createContext","token","logout","AuthProvider","children","useState","setToken","useEffect","localStorage","getItem","a","AuthService","setItem","contextValue","removeItem","Provider","value","useAuth","useContext","getProfiles","headers","Authorization","getProfile","startProfile","updateProfile","profile","setVisible","visible","getSkills","isLoading","failedToLoad","toggleVisibility","ProfileProvider","setLoading","setFailedToLoad","setProfile","useCallback","ProfileService","started","newProfile","useProfile","swipe","match","reset","skills","profiles","ProfileListProvider","setSkills","setProfiles","useProfileList","swipeProfile","MatchProvider","swipedProfiles","setSwipedProfiles","to","includes","MatchService","swiped","useMatch","getNotifications","readNotifications","notifications","NotificationProvider","setNotifications","NotificationService","map","notification","read","useNotification","useStyles","makeStyles","theme","margin","spacing","classes","useParams","setEmail","errors","setErrors","isSubmitting","setSubmitting","failedToSubmit","setFailedToSubmit","redirect","setRedirect","onSubmit","e","preventDefault","target","confirmPassword","length","Container","className","root","Box","color","textAlign","Grid","container","alignItems","item","TextField","name","type","fullWidth","variant","disabled","Button","InputWithIcon","href","defaultShow","show","setShow","open","dismiss","onClose","matchedUser","Dialog","DialogTitle","DialogContent","DialogContentText","idea","slack","DialogActions","onClick","action","size","maxWidth","marginTop","snackbar","backgroundColor","fontFamily","dialogControl","useDialogControl","openNotification","setOpenNotification","TextBox","SnackbarContent","openNotificationDetails","props","waiting","setWaiting","_onClick","onSuccess","PromiseButton","toggleVisibilityConfirmationDialog","toggleVisibilityAlertDialog","logoutConfirmationDialog","onToggleVisibility","onLogout","Card","i","x","y","rot","scale","trans","bind","lookingFor","skillRows","slice","div","key","style","transform","interpolate","boxShadow","opacity","Math","abs","marginLeft","marginRight","marginBottom","borderRadius","paddingBottom","fontSize","row","index","padding","display","skill","title","icon","look","r","s","Deck","Set","gone","useSprings","random","delay","from","set","onSwipe","direction","onFinish","console","log","useGesture","args","down","xDelta","delta","xDir","distance","velocity","dir","swipePromise","then","add","isGone","has","window","innerWidth","undefined","config","friction","tension","position","profileState","profileListState","hydratedProfiles","setHydratedProfiles","profileSkills","filter","profileLookingFor","LoadingText","SetupText","ResetText","ErrorText","completed","useForm","setValue","handleSubmit","watch","showConfirmationModal","setShowModal","required","validate","Object","keys","onModalDismiss","placeholder","inputRef","error","helperText","multiline","AssignmentTurnedIn","Autocomplete","multiple","filterSelectedOptions","options","getOptionLabel","option","renderInput","params","label","onChange","InputProps","startAdornment","InputAdornment","NavAction","navigate","rest","BottomNavigationAction","BottomNavigation","NotificationAction","unreadCount","setUnreadCount","Badge","badgeContent","basename","path","AuthRoute","Register","ForgotPassword","AppRoute","Notifications","ChangeProfile","Home","Providers","Routes","App","Layout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93a15bf6.chunk.js","sourcesContent":["const env = process.env.NODE_ENV;\n\nexport const apiHost =\n  (env === `development`) ?\n    `http://localhost:3000` :\n    `https://makeuc-registration-dev.herokuapp.com`;\n","import Axios from 'axios';\nimport { apiHost } from './Api';\n\nconst apiUrl = `${apiHost}/auth`;\n\nexport default {\n\n  async getRegistrantEmail(id) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/email/${id}`,\n        method: `GET`\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async register(registrantId, password) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/register`,\n        method: `POST`,\n        data: { registrantId, password }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async login(email, password) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/login`,\n        method: `POST`,\n        data: { email, password }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response?.data.message || `Cannot reach server, please try again later`);\n    }\n  }\n};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport AuthService from '../services/AuthService';\n\nconst tokenStorageKey = `lattice-token`;\n\nconst context = createContext({ \n  token: ``, \n  email: ``, \n  getRegistrantEmail() {}, \n  register() {},\n  login() {},\n  logout() {}\n});\n\nexport function AuthProvider({ children }) {\n  const [ token, setToken ] = useState(``);\n\n  useEffect(() => {\n    const token = localStorage.getItem(tokenStorageKey);\n    setToken(token);\n  }, []);\n\n  const getRegistrantEmail = registrantId => AuthService.getRegistrantEmail(registrantId);\n\n  const register = async (registrantId, password) => {\n    const token = await AuthService.register(registrantId, password);\n    setToken(token);\n    localStorage.setItem(tokenStorageKey, token);\n  };\n\n  const login = async (email, password) => {\n    const token = await AuthService.login(email, password);\n    setToken(token);\n    localStorage.setItem(tokenStorageKey, token);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(tokenStorageKey);\n    setToken(null);\n  };\n\n  const contextValue = {\n    token, getRegistrantEmail, register, login, logout\n  };\n\n  return <context.Provider value={contextValue}>{children}</context.Provider>;\n};\n\nexport const useAuth = () => useContext(context);\n","import Axios from 'axios';\nimport { apiHost } from './Api';\n\nconst apiUrl = `${apiHost}/profile`;\n\nexport default {\n  async getProfiles({ token }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/list`,\n        method: `GET`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async getProfile({ token }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/`,\n        method: `GET`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async startProfile({ token }) {\n    try {\n      await Axios({\n        url: `${apiUrl}/start`,\n        method: `POST`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async updateProfile({ token, profile }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/`,\n        method: `PUT`,\n        data: profile,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async setVisible({ token, visible }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/visible`,\n        method: `PUT`,\n        data: { visible },\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n  \n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n\n  async getSkills({ token }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}/skills`,\n        method: `GET`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  }\n};","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport ProfileService from '../services/ProfileService';\nimport { useAuth } from './AuthProvider';\n\nconst context = createContext({\n  isLoading: true, failedToLoad: null, profile: {},\n  getProfile() {}, updateProfile() {}, toggleVisibility() {}\n});\n\nexport function ProfileProvider({ children }) {\n  const { token } = useAuth();\n\n  const [ isLoading, setLoading ] = useState(true);\n  const [ failedToLoad, setFailedToLoad ] = useState(null);\n  const [ profile, setProfile ] = useState({});\n\n  const getProfile = useCallback(async () => {\n    try {\n      setLoading(true);\n      setFailedToLoad(null);\n\n      const profile = await ProfileService.getProfile({ token });\n\n      setProfile(profile);\n\n      if(!profile.started) {\n        ProfileService.startProfile({ token });\n      }\n    } catch (err) {\n      setFailedToLoad(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [ token ]);\n\n  useEffect(() => {\n    token && getProfile();\n  }, [ token, getProfile ]);\n\n  const updateProfile = async profile => {\n    const newProfile = await ProfileService.updateProfile({ token, profile });\n    setProfile(newProfile);\n  };\n\n  const toggleVisibility = async () => {\n    const newProfile = await ProfileService.setVisible({ token, visible: !profile.visible });\n    setProfile(newProfile);\n  };\n\n  const contextValue = {\n    isLoading, failedToLoad, profile,\n    getProfile, updateProfile, toggleVisibility\n  };\n\n  return <context.Provider value={contextValue}>{children}</context.Provider>;\n};\n\nexport const useProfile = () => useContext(context);\n","import Axios from 'axios';\nimport { apiHost } from './Api';\n\nconst apiUrl = `${apiHost}/match`;\n\nexport default {\n  async swipe({ token, match }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}`,\n        method: `POST`,\n        data: match,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n  async reset({ token }) {\n    try {\n      await Axios({\n        url: `${apiUrl}`,\n        method: `DELETE`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  }\n};","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport ProfileService from '../services/ProfileService';\nimport { useAuth } from './AuthProvider';\nimport { useProfile } from './ProfileProvider';\n\nconst context = createContext({\n  isLoading: true, failedToLoad: null,\n  skills: [], profiles: [],\n  getSkills() {}, getProfiles() {}\n});\n\nexport function ProfileListProvider({ children }) {\n  const { token } = useAuth();\n  const { profile } = useProfile();\n\n  const [ isLoading, setLoading ] = useState(false);\n  const [ failedToLoad, setFailedToLoad ] = useState(null);\n  const [ skills, setSkills ] = useState([]);\n\n  const [ profiles, setProfiles ] = useState([]);\n\n  const getSkills = useCallback(async () => {\n    const skills = await ProfileService.getSkills({ token });\n    setSkills(skills);\n  }, [ token ]);\n  \n  const getProfiles = useCallback(async () => {\n    if(!profile?.visible) return;\n    try {\n      setLoading(true);\n      setFailedToLoad(null);\n\n      const profiles = await ProfileService.getProfiles({ token });\n\n      setProfiles(profiles);\n    } catch (err) {\n      setFailedToLoad(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [ profile.visible, token ]);\n\n  useEffect(() => {\n    token && getSkills();\n  }, [ token, getSkills ]);\n\n  useEffect(() => {\n    token && getProfiles();\n  }, [ token, getProfiles ]);\n\n  const contextValue = {\n    isLoading, failedToLoad,\n    skills, profiles,\n    getSkills, getProfiles\n  };\n\n  return <context.Provider value={contextValue}>{children}</context.Provider>;\n};\n\nexport const useProfileList = () => useContext(context);\n","import React, { createContext, useContext, useState } from 'react';\nimport MatchService from '../services/MatchService';\nimport { useAuth } from './AuthProvider';\nimport { useProfileList } from './ProfileListProvider';\n\nconst context = createContext({\n  swipeProfile() {}, reset() {}\n});\n\nexport function MatchProvider({ children }) {\n  const { token } = useAuth();\n  const { getProfiles } = useProfileList()\n\n  const [ swipedProfiles, setSwipedProfiles ] = useState([]);\n\n  const swipeProfile = async (to, match) => {\n    if(swipedProfiles.includes(to.id)) return;\n\n    await MatchService.swipe({ token, match: { to: to.id, match } });\n    setSwipedProfiles(swiped => [ ...swiped, to.id ]);\n  };\n\n  const reset = async () => {\n    await MatchService.reset({ token });\n    setSwipedProfiles([]);\n    await getProfiles();\n  };\n\n  const contextValue = {\n    swipeProfile, reset\n  };\n\n  return <context.Provider value={contextValue}>{children}</context.Provider>;\n};\n\nexport const useMatch = () => useContext(context);\n","import Axios from 'axios';\nimport { apiHost } from './Api';\n\nconst apiUrl = `${apiHost}/notification`;\n\nexport default {\n  async getNotifications({ token }) {\n    try {\n      const res = await Axios({\n        url: `${apiUrl}`,\n        method: `GET`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return res.data;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  },\n  async readNotifications({ token }) {\n    try {\n      await Axios({\n        url: `${apiUrl}/read`,\n        method: `POST`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      return;\n    } catch (err) {\n      throw new Error(err.response.data.message);\n    }\n  }\n};","import React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport NotificationService from '../services/NotificationService';\nimport { useAuth } from './AuthProvider';\n\nconst context = createContext({\n  isLoading: false, failedToLoad: null, notifications: [],\n  getNotifications() {}, readNotifications() {}\n});\n\nexport function NotificationProvider({ children }) {\n  const { token } = useAuth();\n\n  const [ isLoading, setLoading ] = useState(true);\n  const [ failedToLoad, setFailedToLoad ] = useState(null);\n  const [ notifications, setNotifications ] = useState([]);\n\n  const getNotifications = useCallback(async () => {\n    if(!token) return;\n    \n    try {\n      setLoading(true);\n      setFailedToLoad(null);\n\n      const notifications = await NotificationService.getNotifications({ token });\n\n      setNotifications(notifications);\n    } catch (err) {\n      setFailedToLoad(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [ token ]);\n\n  useEffect(() => {\n    getNotifications();\n  }, [ getNotifications ]);\n\n  const readNotifications = async () => {\n    if(!token) return;\n\n    await NotificationService.readNotifications({ token });\n    setNotifications(\n      notifications => notifications.map(\n        notification => ({ ...notification, read: true })\n      )\n    );\n  };\n\n  const contextValue = {\n    isLoading, failedToLoad, notifications,\n    getNotifications, readNotifications\n  };\n\n  return <context.Provider value={contextValue}>{children}</context.Provider>;\n};\n\nexport const useNotification = () => useContext(context);\n","import React from 'react';\nimport { AuthProvider } from '../providers/AuthProvider';\nimport { ProfileProvider } from '../providers/ProfileProvider';\nimport { MatchProvider } from '../providers/MatchProvider';\nimport { ProfileListProvider } from '../providers/ProfileListProvider';\nimport { NotificationProvider } from '../providers/NotificationProvider';\n\nexport default function({ children }) {\n  return <>\n    <AuthProvider>\n      <ProfileProvider>\n        <ProfileListProvider>\n          <MatchProvider>\n            <NotificationProvider>\n              {children}\n            </NotificationProvider>\n          </MatchProvider>\n        </ProfileListProvider>\n      </ProfileProvider>\n    </AuthProvider>\n  </>;\n}","import React, { useEffect, useState } from 'react';\nimport { useParams, Redirect, Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport PassOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\nimport { Button, Container, Box } from '@material-ui/core';\n\nimport { useAuth } from '../../providers/AuthProvider';\n\nimport \"../../styles/Form.scss\"\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function () {\n  const classes = useStyles();\n  const { token, getRegistrantEmail, register } = useAuth();\n  const { registrantId } = useParams();\n\n  const [isLoading, setLoading] = useState(true);\n  const [failedToLoad, setFailedToLoad] = useState(null);\n  const [email, setEmail] = useState(``);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setSubmitting] = useState(false);\n  const [failedToSubmit, setFailedToSubmit] = useState(null);\n  const [redirect, setRedirect] = useState(``);\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const email = await getRegistrantEmail(registrantId);\n        setEmail(email);\n      } catch (err) {\n        setFailedToLoad(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [getRegistrantEmail, registrantId]);\n\n  useEffect(() => { token && setRedirect(`/`) }, [token]);\n\n  const onSubmit = async e => {\n    try {\n      e.preventDefault();\n      setSubmitting(true);\n      setErrors({});\n\n      const email = e.target.email.value;\n      const password = e.target.password.value;\n      const confirmPassword = e.target.confirmPassword.value;\n\n      if (!email) {\n        return setErrors({ email: `Invalid email, please check the link provided` });\n      }\n\n      if (!password) {\n        return setErrors({ password: `Please provide a password` });\n      }\n\n      if (password.length < 6) {\n        return setErrors({ password: `Password must be atleast 6 characters long` });\n      }\n\n      if (password !== confirmPassword) {\n        return setErrors({ confirmPassword: `Passwords don't match` });\n      }\n\n      await register(registrantId, password);\n    } catch (err) {\n      setFailedToSubmit(err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Container className={classes.root}>\n      <form onSubmit={onSubmit}>\n        <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n          {isLoading ? <h1 className=\"title\">Loading...</h1> :\n            failedToLoad ?\n              <Box color=\"error.main\" textAlign=\"center\">\n                <h3>{failedToLoad.message}</h3>\n              </Box> :\n              <>\n                <h1 className=\"title\">Create Account</h1>\n                <Box color=\"error.main\" textAlign=\"center\">{failedToSubmit && failedToSubmit.message}</Box>\n                <div className={classes.margin + \" font-opensans\"}>\n                  <Grid container spacing={4} className=\"lattice-form-band\" alignItems=\"flex-end\">\n                    <Grid className=\"lattice-icon\" item>\n                      <MailOutlineIcon />\n                    </Grid>\n                    <p className=\"lattice-form-label mb0 font-gray\">Email Address</p>\n                    <Grid item className=\"lattice-form-input\">\n                      <TextField name=\"email\" type=\"email\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" value={email} disabled={true} />\n                      {errors.email &&\n                        <Box color=\"error.main\">{errors.email}</Box>\n                      }\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={4} className=\"lattice-form-band\" alignItems=\"flex-end\">\n                    <Grid item className=\"lattice-icon\">\n                      <PassOutlinedIcon />\n                    </Grid>\n                    <p className=\"lattice-form-label mb0 font-gray\">Password</p>\n                    <Grid item className=\"lattice-form-input\">\n                      <TextField name=\"password\" type=\"password\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" />\n                      {errors.password &&\n                        <Box color=\"error.main\">{errors.password}</Box>\n                      }\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={4} className=\"lattice-form-band\" alignItems=\"flex-end\">\n                    <Grid item className=\"lattice-icon\">\n                      <PassOutlinedIcon />\n                    </Grid>\n                    <p className=\"lattice-form-label mb0 font-gray\">Confirm Password</p>\n                    <Grid item className=\"lattice-form-input\">\n                      <TextField name=\"confirmPassword\" type=\"password\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" />\n                      {errors.confirmPassword &&\n                        <Box color=\"error.main\">{errors.confirmPassword}</Box>\n                      }\n                    </Grid>\n                  </Grid>\n                  <input type=\"hidden\" name=\"registrantId\" value={registrantId} />\n                  <Button type=\"submit\" variant=\"contained\" className=\"center\" color=\"primary\" disabled={isSubmitting}>Sign Up</Button>\n                  <Box className=\"mt4\">Already registered? Log in <Link to=\"/auth/login\">here</Link></Box>\n                </div>\n              </>\n          }\n        </div>\n      </form>\n      {redirect && <Redirect to={redirect} />}\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport PassOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\nimport { Button, Box } from '@material-ui/core';\nimport Container from \"@material-ui/core/Container\";\n\nimport { useAuth } from '../../providers/AuthProvider';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function InputWithIcon() {\n  const classes = useStyles();\n  const { token, login } = useAuth();\n  const [ errors, setErrors ] = useState({});\n  const [ isSubmitting, setSubmitting ] = useState(false);\n  const [ failedToSubmit, setFailedToSubmit ] = useState(null);\n  const [ redirect, setRedirect ] = useState(``);\n  \n  useEffect(() => {token && setRedirect(`/`)}, [ token ]);\n\n  const onSubmit = async e => {\n    try {\n      e.preventDefault();\n      setSubmitting(true);\n      setErrors({});\n\n      const email = e.target.email.value;\n      const password = e.target.password.value;\n\n      if(!email) {\n        return setErrors({ email: `Please provide an email` });\n      }\n\n      if(!password) {\n        return setErrors({ password: `Please provide a password` });\n      }\n\n      await login(email, password);\n    } catch(err) {\n      setFailedToSubmit(err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={onSubmit}>\n        <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n          <h1 className=\"title\">Lattice Log In</h1>\n          <div className=\"font-opensans tc mb3\">\n            <p className=\"mb4\">\n              Discover and connect with MakeUC 2020 hackers from across the world!\n            </p>\n            <Box color=\"error.main\" textAlign=\"center\">{failedToSubmit && failedToSubmit.message}</Box>\n            <div className={classes.margin}>\n              <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                <Grid className=\"lattice-icon\" item>\n                  <MailOutlineIcon />\n                </Grid>\n                <p className=\"lattice-form-label mb0 font-gray\">Email Address</p>\n                <Grid item className=\"lattice-form-input\">\n                  <TextField name=\"email\" type=\"email\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" />\n                    {errors.email &&\n                      <Box color=\"error.main\">{errors.email}</Box>\n                    }\n                </Grid>\n              </Grid>\n              <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                <Grid item className=\"lattice-icon\">\n                  <PassOutlinedIcon />\n                </Grid>\n                <p className=\"lattice-form-label mb0 font-gray\">Password</p>\n                <Grid item className=\"lattice-form-input\">\n                  <TextField name=\"password\" type=\"password\" id=\"input-with-icon-grid\" fullWidth variant=\"outlined\" />\n                    {errors.password &&\n                      <Box color=\"error.main\">{errors.password}</Box>\n                    }\n                </Grid>\n              </Grid>\n            </div>\n            <Button type=\"submit\" variant=\"contained\" className=\"center\" color=\"primary\" disabled={isSubmitting}>Sign In</Button>\n            <Box className=\"mt4\">Don't have an account? Contact us at <a href=\"mailto:info@makeuc.io\">info@makeuc.io</a> for an invite link</Box>\n          </div>\n        </div>\n      </form>\n      {redirect && <Redirect to={redirect} />}\n    </Container>\n  );\n}\n","import { useState } from 'react';\n\nexport default function(defaultShow = false) {\n  const [ show, setShow ] = useState(defaultShow);\n  \n  const open = () => setShow(true);\n  const dismiss = () => setShow(false);\n\n  return { show, open, dismiss };\n};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function({ show, onClose, matchedUser }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>You matched with {matchedUser?.name}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {matchedUser?.name}<br />\n            {matchedUser?.idea}<br />\n            {matchedUser?.email}<br />\n            @{matchedUser?.slack}<br />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Container from \"@material-ui/core/Container\";\n\nimport { useNotification } from '../../providers/NotificationProvider';\nimport useDialogControl from '../../components/DialogControl.hook';\nimport NotificationDetailsDialog from './dialogs/notification-details';\n\nconst action = (\n  <Button className=\"font-secondary-dark\" size=\"small\">\n    <LaunchIcon className=\"font-secondary-dark\" />\n  </Button>\n);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  snackbar: {\n    backgroundColor: '#8174ff',\n    fontFamily: 'Open Sans'\n  }\n}));\n\nexport default function() {\n  const classes = useStyles();\n  const { isLoading, failedToLoad, notifications, getNotifications, readNotifications } = useNotification();\n  const dialogControl = useDialogControl();\n  \n  const [ openNotification, setOpenNotification ] = useState(null);\n\n  useEffect(() => { readNotifications() }, [ readNotifications ]);\n\n  const openNotificationDetails = notification => {\n    setOpenNotification(notification);\n    dialogControl.open();\n  };\n\n  return (\n    <Container className={classes.root + \" nav-bar-margin\"}>\n      {\n        isLoading ?\n          <TextBox>Fetching notifications...</TextBox> :\n\n        failedToLoad ? \n          <TextBox>\n            <p>Error fetching notifications</p>\n            <Button variant=\"contained\" color=\"primary\" onClick={getNotifications}>Try again</Button>\n          </TextBox> :\n\n          <div className=\"pa4\">\n            {notifications.map(notification =>\n              <SnackbarContent\n                className={classes.snackbar}\n                message={`You matched with ${notification.to.name}`}\n                action={action}\n                onClick={() => openNotificationDetails(notification)}\n              />\n            )}\n          </div>\n      }\n      <NotificationDetailsDialog\n        show={dialogControl.show}\n        onClose={dialogControl.dismiss}\n        matchedUser={openNotification?.to}\n      />\n    </Container>\n  );\n};\n\nfunction TextBox({ children }) {\n  return <Container className=\"nav-bar-margin\">\n    <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n      {children}\n    </div>\n  </Container>;\n};\n","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\n\nexport default function({ onClick, children, ...props }) {\n  const [ waiting, setWaiting ] = useState();\n\n  const _onClick = async (...args) => {\n    try {\n      setWaiting(true);\n      await onClick(...args);\n    } finally {\n      setWaiting(false);\n    }\n  }\n\n  return <Button {...props} onClick={_onClick} disabled={waiting}>{children}</Button>;\n};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PromiseButton from '../../../components/PromiseButton';\n\nexport default function({ show, onSuccess, onClose, visible }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Are you sure</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Mark you profile {visible ? ` not` : ``} visible?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <PromiseButton onClick={onSuccess} color=\"primary\">\n            Yes\n          </PromiseButton>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function({ show, onClose, visible }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Success</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Your profile is now {visible ? ` ` : ` not`} visible.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PromiseButton from '../../../components/PromiseButton';\n\nexport default function({ show, onSuccess, onClose }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Logout</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to log out?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <PromiseButton onClick={onSuccess} color=\"primary\">\n            Yes\n          </PromiseButton>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport PersonIcon from '@material-ui/icons/Person';\nimport SlackIcon from '@material-ui/icons/AlternateEmail';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport { Button, Container } from '@material-ui/core';\n\nimport { useAuth } from '../../providers/AuthProvider';\nimport { useProfile } from '../../providers/ProfileProvider';\nimport useDialogControl from '../../components/DialogControl.hook';\nimport ToggleVisibilityConfirmation from './dialogs/toggle-visibility-confirmation';\nimport ToggleVisibilityAlert from './dialogs/toggle-visibility-alert';\nimport LogoutConfirmation from './dialogs/logout-confirmation';\n\nimport '../../styles/Profile.scss'\n\nexport default function() {\n  const { isLoading, profile, toggleVisibility } = useProfile();\n  const { logout } = useAuth();\n\n  const [ redirect, setRedirect ] = useState();\n  const toggleVisibilityConfirmationDialog = useDialogControl();\n  const toggleVisibilityAlertDialog = useDialogControl();\n  const logoutConfirmationDialog = useDialogControl();\n\n  const redirectToProfileForm = () => setRedirect(`/profile/edit`);\n\n  const onToggleVisibility = async () => {\n    await toggleVisibility();\n    toggleVisibilityConfirmationDialog.dismiss();\n    toggleVisibilityAlertDialog.open();\n  };\n\n  const onLogout = async () => {\n    await logout();\n    logoutConfirmationDialog.dismiss();\n  };\n\n  return (\n    <Container className=\"nav-bar-margin\">\n      <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n        <h1 className=\"title\">Lattice Account</h1>\n          {isLoading ? `Loading...` :\n            <>\n              <div className=\"mb4\">\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <PersonIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">{profile?.name}</p>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <MailOutlineIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">{profile?.email}</p>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid item className=\"lattice-icon\">\n                    <SlackIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">{profile?.slack}</p>\n                </Grid>\n              </div>\n\n              <Button\n                variant=\"contained\"\n                className=\"center profile-button\"\n                color=\"primary\"\n                onClick={redirectToProfileForm}\n              >Edit Profile</Button>\n\n              <Button\n                variant=\"contained\"\n                className=\"center profile-button\"\n                color=\"primary\"\n                onClick={toggleVisibilityConfirmationDialog.open}\n              >\n                {profile.visible ?\n                  <>\n                    <VisibilityIcon /> &nbsp; Mark Not Visible\n                  </> :\n                  <>\n                    <VisibilityOffIcon /> &nbsp; Mark Visible\n                  </>\n                }\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                className=\"center profile-button\"\n                color=\"primary\"\n              >Change Password</Button>\n\n              <Button\n                variant=\"contained\"\n                className=\"center profile-button\"\n                color=\"primary\"\n                onClick={logoutConfirmationDialog.open}\n              >Logout</Button>\n            </>\n          }\n          <ToggleVisibilityConfirmation\n            show={toggleVisibilityConfirmationDialog.show}\n            onClose={toggleVisibilityConfirmationDialog.dismiss}\n            onSuccess={onToggleVisibility}\n            visible={profile.visible}\n          />\n          <ToggleVisibilityAlert\n            show={toggleVisibilityAlertDialog.show}\n            onClose={toggleVisibilityAlertDialog.dismiss}\n            visible={profile.visible}\n          />\n          <LogoutConfirmation\n            show={logoutConfirmationDialog.show}\n            onClose={logoutConfirmationDialog.dismiss}\n            onSuccess={onLogout}\n          />\n          {redirect && <Redirect to={redirect} />}\n      </div>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { string, array } from \"prop-types\";\nimport { animated, interpolate } from \"react-spring/hooks\";\n\nimport \"../../styles/Card.scss\";\n\nconst Card = ({ i, x, y, rot, scale, trans, bind, data }) => {\n  const { skills, name, idea, lookingFor } = data[i];\n\n  const skillRows = [skills.slice(0, 3), skills.slice(3, 6)];\n\n  return (\n    <animated.div\n      key={i}\n      style={{\n        transform: interpolate(\n          [x, y],\n          (x, y) => `translate3d(${x}px,${y}px,0)`\n        )\n      }}\n    >\n      <animated.div\n        {...bind(i)}\n        style={{\n          transform: interpolate([rot, scale], trans),\n          boxShadow: interpolate(\n            [x], (x) => {\n              if(x > -5 && x < 5) return null;\n              const opacity = Math.abs(x)/300;\n              const color = x > 0 ? `rgba(0, 255, 0, ${opacity})` : `rgba(255, 0, 0, ${opacity})`;\n              return `${x*1.5}px 0 80px -80px ${color} inset`;\n            }\n          )\n        }}\n      >\n        <div className=\"font-opensans\"\n          style={{\n            textAlign: `center`,\n          }}\n        >\n          <h2 className=\"name\">\n            {name}\n          </h2>\n          <h3>Project Idea</h3>\n          <div\n            style={{\n              marginTop: `-5px`,\n              marginLeft: `15px`,\n              marginRight: `15px`,\n              marginBottom: `35px`,\n              borderRadius: `10px`,\n              paddingBottom: `0px`,\n            }}\n          >\n            <p\n              style={{\n                fontSize: `13px`,\n              }}\n            >\n              {idea}\n            </p>\n          </div>\n          <h3>Offering</h3>\n          {skillRows.map(\n            (row, index) =>\n              !!row.length && (\n                <div\n                  key={index}\n                  style={{\n                    padding: `25px`,\n                    paddingBottom: `10px`,\n                    marginTop: `-45px`,\n                    marginLeft: `15px`,\n                    marginRight: `15px`,\n                    display: `flex`,\n                    borderRadius: `10px`,\n                  }}\n                >\n                  {row.map((skill) => (\n                    <i\n                      key={skill.title}\n                      className={skill.icon}\n                      style={{\n                        padding: `10px`,\n                        fontSize: `50px`,\n                      }}\n                    />\n                  ))}\n                </div>\n              )\n          )}\n          <h3>Looking For</h3>\n          <div\n            style={{\n              padding: `25px`,\n              marginTop: `-45px`,\n              marginLeft: `15px`,\n              marginRight: `15px`,\n              display: `flex`,\n              borderRadius: `10px`,\n            }}\n          >\n            {lookingFor.map((look) => (\n              <i\n                key={look.title}\n                className={look.icon}\n                style={{\n                  padding: `10px`,\n                  fontSize: `50px`,\n                }}\n              ></i>\n            ))}\n          </div>\n        </div>\n      </animated.div>\n    </animated.div>\n  );\n};\n\nCard.propTypes = {\n  skills: array,\n  name: string,\n  idea: string,\n  lookingFor: array,\n};\n\nexport default Card;\n","import React, { useState } from 'react';\nimport { useSprings } from 'react-spring/hooks';\nimport { useGesture } from 'react-with-gesture';\n\nimport { useMatch } from '../../providers/MatchProvider';\nimport { useProfileList } from '../../providers/ProfileListProvider';\nimport Card from './Card';\nimport '../../styles/Deck.css';\n\nconst to = (i) => ({\n  x: 0,\n  y: i * -3,\n  scale: 1,\n  rot: -5 + Math.random() * 10,\n  delay: i * 100,\n});\n\nconst from = (i) => ({ rot: 0, scale: 1.5, y: -1000 });\n\nconst trans = (r, s) =>\n  `perspective(1500px) rotateX(10deg) rotateY(${\n    r / 10\n  }deg) rotateZ(${r}deg) scale(${s})`;\n\nfunction Deck({ data }) {\n  const { getProfiles } = useProfileList();\n  const { swipeProfile } = useMatch();\n\n  const [gone] = useState(() => new Set());\n\n  const [props, set] = useSprings(data.length, (i) => ({\n    ...to(i),\n    from: from(i),\n  }));\n\n  const onSwipe = async (profile, direction) => {\n    await swipeProfile(profile, (direction === 1));\n  };\n\n  const onFinish = () => {\n    console.log(`onFinish: End of cards`);\n    getProfiles();\n  };\n\n  const bind = useGesture(\n    ({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity,\n    }) => {\n      const trigger = velocity > 0.2;\n      const dir = xDir < 0 ? -1 : 1;\n\n      let swipePromise = null;\n\n      if (!down && trigger) {\n        swipePromise = onSwipe(data[index], dir).then(() => console.log(`swiped`));\n        gone.add(index);\n      }\n\n      set((i) => {\n        if (index !== i) {\n          return;\n        }\n\n        const isGone = gone.has(index);\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0;\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0);\n        const scale = down ? 1.1 : 1;\n\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 },\n        };\n      });\n\n      if (!down && gone.size === data.length) {\n        swipePromise?.then(onFinish);   // eslint-disable-line no-unused-expressions\n        // setTimeout(() => gone.clear() || set((i) => to(i)), 600);\n      }\n    }\n  );\n\n  return <div className=\"deck\" style={{ position: `fixed` }}>\n    {props.map(({ x, y, rot, scale }, i) => (\n      <Card\n        key={i}\n        i={i}\n        x={x}\n        y={y}\n        rot={rot}\n        scale={scale}\n        trans={trans}\n        data={data}\n        bind={bind}\n      />\n    ))}\n  </div>;\n}\n\nexport default Deck;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Button } from \"@material-ui/core\";\n\nimport { useProfile } from \"../../providers/ProfileProvider\";\nimport { useProfileList } from \"../../providers/ProfileListProvider\";\nimport Deck from \"./Deck\";\nimport { useMatch } from \"../../providers/MatchProvider\";\nimport PromiseButton from \"../../components/PromiseButton\";\n\nexport default function () {\n  const profileState = useProfile();\n  const profileListState = useProfileList();\n\n  const [ hydratedProfiles, setHydratedProfiles ] = useState();\n\n  const { profile } = profileState;\n  const { isLoading, skills, profiles } = profileListState;\n\n  useEffect(() => {\n    if(skills.length) {\n      console.log({ profiles });\n      const hydratedProfiles = profiles.map(profile => {\n        const profileSkills = skills.filter(skill => profile?.skills?.includes(skill.title));\n        const profileLookingFor = skills.filter(skill => profile?.lookingFor?.includes(skill.title));\n    \n        return { ...profile, skills: profileSkills, lookingFor: profileLookingFor };\n      });\n\n      setHydratedProfiles(hydratedProfiles);\n    }\n  }, [ profiles, skills ]);\n\n  console.log({ hydratedProfiles });\n\n  return (\n    <>\n      <LoadingText />\n      <SetupText />\n      <ResetText />\n      <ErrorText />\n\n      {profile?.visible && !isLoading && !!hydratedProfiles?.length &&\n        <Deck data={hydratedProfiles} />\n      }\n    </>\n  );\n};\n\nfunction TextBox({ children }) {\n  return <Container className=\"nav-bar-margin\">\n    <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n      {children}\n    </div>\n  </Container>;\n};\n\nfunction SetupText() {\n  const { isLoading, profile } = useProfile();\n\n  return (\n    !isLoading ? (\n      !profile.started ? \n      <TextBox>\n        Welcome! Let's get you set up. Head over to your <Link to=\"/profile/edit\">profile page</Link> to get started.\n      </TextBox> :\n  \n      !profile.completed ?\n      <TextBox>\n        Welcome back! Head over to your <Link to=\"/profile/edit\">profile page</Link> to complete your profile and start searching for potential teammates!\n      </TextBox> :\n  \n      !profile.visible ?\n      <TextBox>\n        Welcome back! Mark your profile \"visible\" from your <Link to=\"/profile\">profile page</Link> to start searching for potential teammates!\n      </TextBox> : null\n    ) : null\n  );\n};\n\nfunction LoadingText() {\n  const profileState = useProfile();\n  const profileListState = useProfileList();\n\n  return (\n    profileState.isLoading ?\n    <TextBox>\n      Fetching your profile...\n    </TextBox> :\n\n    profileListState.isLoading ?\n    <TextBox>\n      Finding the best hackers for you...\n    </TextBox> : null\n  );\n};\n\nfunction ResetText() {\n  const { profile } = useProfile();\n  const { isLoading, profiles } = useProfileList();\n  const { reset } = useMatch();\n\n  return (\n    (profile?.visible && !isLoading && !profiles.length) ?\n    <TextBox>\n      <p>\n        That's everybody! If you still haven't found your teammates, you can reset all your left swipes and start over.\n      </p>\n      <PromiseButton variant=\"contained\" color=\"primary\" onClick={reset}>Reset</PromiseButton>\n\n      <p>\n        Or if you have already found your teammates, you can mark your profile as not visible.\n      </p>\n      <Button variant=\"contained\" color=\"primary\">Mark not visible</Button>\n    </TextBox> : null\n  );\n};\n\nfunction ErrorText() {\n  const profileState = useProfile();\n  const profileListState = useProfileList();\n\n  return (\n    profileState.failedToLoad ?\n    <TextBox>\n      There was an error fetching your profile\n      <Button variant=\"contained\" color=\"primary\">Retry</Button>\n    </TextBox> :\n\n    profileListState.failedToLoad ?\n    <TextBox>\n      There was an error fetching hackers\n      <Button variant=\"contained\" color=\"primary\">Retry</Button>\n    </TextBox> : null\n  );\n};\n","import React from 'react';\n// import {makeStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport {Button, Container} from '@material-ui/core';\n/* \nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1)\n    }\n})); */\n\nexport default function () {\n    // const classes = useStyles();\n\n    return (\n        <Container>\n            <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n                <h1 className=\"title\">Reset Password</h1>\n                <div className=\"mb4\">\n                    <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                        <Grid className=\"lattice-icon\" item>\n                            <MailOutlineIcon/>\n                        </Grid>\n                        <p className=\"lattice-form-label mb0 font-gray\">Email Address</p>\n                        <Grid item className=\"lattice-form-input\">\n                            <TextField id=\"input-with-icon-grid\" fullWidth variant=\"outlined\"/>\n                        </Grid>\n                    </Grid>\n                    <Button variant=\"contained\" className=\"center\" color=\"primary\">Send Reset Instructions</Button>\n                </div>\n\n            </div>\n        </Container>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function({ show, onClose }) {\n  return (\n    <div>\n      <Dialog\n        open={show}\n        onClose={onClose}\n      >\n        <DialogTitle>Success</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Your profile was sucessfully updated.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Next\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport SlackIcon from '@material-ui/icons/AlternateEmail';\nimport PersonIcon from '@material-ui/icons/Person';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { Button, Container, InputAdornment, Box } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { AssignmentTurnedIn } from \"@material-ui/icons\";\n\nimport { useProfile } from \"../../providers/ProfileProvider\";\nimport ConfirmationDialog from './dialogs/profile-save-confirmation';\n\nimport \"../../styles/Form.scss\"\nimport { useProfileList } from '../../providers/ProfileListProvider';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function() {\n  const classes = useStyles();\n  const { register, setValue, handleSubmit, errors, reset, watch } = useForm();\n  const { isLoading, profile, updateProfile } = useProfile();\n  const { skills } = useProfileList();\n\n  const [ isSubmitting, setSubmitting ] = useState(false);\n  const [ failedToSubmit, setFailedToSubmit ] = useState(``);\n  const [ showConfirmationModal, setShowModal ] = useState(false);\n  const [ redirect, setRedirect ] = useState();\n\n  useEffect(()=> {\n    register({ name: `skills` }, {\n      required: true,\n      validate: value => value.length <= 6\n    });\n    register({ name: `lookingFor` }, {\n      required: true,\n      validate: value => value.length <= 3\n    });\n  }, [ register ]);\n\n  useEffect(() => {\n    const profileSkills = skills?.filter(skill => profile?.skills?.includes(skill.title));\n    const profileLookingFor = skills?.filter(skill => profile?.lookingFor?.includes(skill.title));\n\n    reset({ ...profile, skills: profileSkills, lookingFor: profileLookingFor });\n  }, [ reset, skills, profile ]);\n\n  useEffect(() => {\n    setFailedToSubmit(!!Object.keys(errors).length && `Please fix the above errors`);\n  }, [ errors ]);\n\n  const onSubmit = async data => {\n    try {\n      setSubmitting(true);\n\n      const skills = data.skills.map(s => s.title);\n      const lookingFor = data.lookingFor.map(s => s.title);\n\n      await updateProfile({ ...data, skills, lookingFor });\n\n      setShowModal(true);\n    } catch(err) {\n      setFailedToSubmit(err.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const onModalDismiss = () => {\n    setShowModal(false);\n    setRedirect(`/profile`);\n  };\n\n  const profileSkills = watch(`skills`) || [];\n  const profileLookingFor = watch(`lookingFor`)|| [];\n\n  return (\n    <Container className={classes.root + \" nav-bar-margin\"}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"bg-white mv3 mv5-ns pa3 ph5-ns br3\">\n          <h1 className=\"title\">Your Profile</h1>\n          {isLoading ? `Loading...` :\n            <>\n              <div className={classes.margin + \" font-opensans\"}>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <PersonIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Full name</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <TextField\n                      fullWidth\n                      name=\"name\"\n                      id=\"input-with-icon-grid\"\n                      variant=\"outlined\" \n                      placeholder=\"John Doe\"\n                      inputRef={register({ required: `This field is required` })}\n                      error={!!errors.name}\n                      helperText={errors.name?.message || `Every hacker needs a public identity.`}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid item className=\"lattice-icon\">\n                    <DescriptionIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Project Idea</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <TextField\n                      fullWidth\n                      multiline\n                      name=\"idea\"\n                      id=\"input-with-icon-grid\"\n                      variant=\"outlined\"\n                      placeholder=\"A coronavirus map\"\n                      inputRef={register({ required: `This field is required` })}\n                      error={!!errors.idea}\n                      helperText={errors.idea?.message || `Share your innovative idea. It's fine if you don't have one.`}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <AssignmentTurnedIn />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Your skills</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <Autocomplete\n                      multiple\n                      filterSelectedOptions\n                      id=\"tags-outlined\"\n                      options={skills} // TODO: Need to be taken from DB ideally\n                      getOptionLabel={(option) => option.title}\n                      value={profileSkills}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"\"\n                          placeholder=\"Skills\"\n                          error={!!errors.skills}\n                          helperText={(errors.skills?.type === `required`) ?\n                            `Please select atleast one` :\n                            `Please select no more than 6`\n                          }\n                        />\n                      )}\n                      onChange={(e, skills) => setValue(`skills`, skills)}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid className=\"lattice-icon\" item>\n                    <AssignmentTurnedIn />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Looking For</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <Autocomplete\n                      multiple\n                      id=\"tags-outlined\"\n                      options={skills} // TODO: Need to be taken from DB ideally\n                      getOptionLabel={(option) => option.title}\n                      filterSelectedOptions\n                      value={profileLookingFor}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"\"\n                          placeholder=\"Skills\"\n                          error={!!errors.lookingFor}\n                          helperText={(errors.lookingFor?.type === `required`) ?\n                            `Please select atleast one` :\n                            `Please select no more than 3`\n                          }\n                        />\n                      )}\n                      onChange={(e, skills) => setValue(`lookingFor`, skills)}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"mb3 lattice-form-band\" alignItems=\"flex-end\">\n                  <Grid item className=\"lattice-icon\">\n                    <SlackIcon />\n                  </Grid>\n                  <p className=\"lattice-form-label mb0 font-gray\">Slack handle</p>\n                  <Grid item className=\"lattice-form-input\">\n                    <TextField\n                      fullWidth\n                      name=\"slack\"\n                      id=\"input-with-icon-grid\"\n                      variant=\"outlined\"\n                      inputRef={register({ required: `This field is required` })}\n                      InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">@</InputAdornment>\n                      }}\n                      error={!!errors.slack}\n                      helperText={errors.slack?.message || `Please provide the handle you have on the MakeUC Slack. Your matches will use this to contact you.`}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                className=\"center\"\n                color=\"primary\"\n                disabled={isSubmitting}\n              >Save</Button>\n              {failedToSubmit &&\n                <Box color=\"error.main\" className=\"mt2\">{failedToSubmit}</Box>\n              }\n            </>\n          }\n        </div>\n      </form>\n      <ConfirmationDialog show={showConfirmationModal} onClose={onModalDismiss}>\n        <h2>Success</h2>\n        <p>Your profile was sucessfully updated.</p>\n        <Button\n          variant=\"contained\"\n          className=\"center\"\n          color=\"primary\"\n          onClick={onModalDismiss}\n        >Next</Button>\n      </ConfirmationDialog>\n      {redirect && <Redirect to={redirect} />}\n    </Container>\n  );\n};\n","import React from 'react';\nimport { useAuth } from '../providers/AuthProvider';\nimport { Redirect } from 'react-router-dom';\n\nexport default function({ children }) {\n  const { token } = useAuth();\n\n  if(token) return <Redirect to=\"/\" />\n\n  return children;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport HomeIcon from '@material-ui/icons/Home';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport '../styles/Navigation.css';\nimport { Badge } from '@material-ui/core';\nimport { useNotification } from '../providers/NotificationProvider';\n\nfunction NavAction({ navigate, ...rest }) {\n  return <BottomNavigationAction {...rest} />;\n}\n\nexport default function() {\n  return <>\n    <BottomNavigation className=\"bottomNavigation\" >\n      <Link to=\"/notifications\">\n        <NavAction icon={<NotificationAction />} />\n      </Link>\n      <Link to=\"/\">\n        <NavAction icon={<HomeIcon />} />\n      </Link>\n      <Link to=\"/profile\">\n        <NavAction icon={<PersonIcon />} />\n      </Link>\n    </BottomNavigation>\n  </>;\n};\n\nconst NotificationAction = () => {\n  const { failedToLoad, notifications } = useNotification();\n  const [ unreadCount, setUnreadCount ] = useState(0);\n \n  useEffect(() => {\n    const unreadCount = notifications.filter(({ read }) => !read).length;\n    setUnreadCount(unreadCount);\n  }, [ notifications ]);\n  \n  return (\n    <Badge\n      badgeContent={failedToLoad ? `!` : unreadCount}\n      color={failedToLoad ? `error` : `primary`}\n    >\n      <NotificationsIcon />\n    </Badge>\n  );\n};\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useAuth } from '../providers/AuthProvider';\nimport Navigation from './Navigation';\n\nexport default function({ children }) {\n  const { token } = useAuth();\n\n  if(token === null) return <Redirect to=\"/auth/login\" />;\n\n  return <>{children}<Navigation /></>;\n};\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Register from '../pages/auth/Register';\nimport Login from '../pages/auth/Login';\nimport Notifications from '../pages/notifications/Notifications';\nimport Profile from '../pages/profile/Profile';\nimport Home from '../pages/home/Home';\nimport ForgotPassword from \"../pages/auth/ForgotPassword\";\nimport ChangeProfile from \"../pages/profile/ChangeProfile\";\nimport AuthRoute from './AuthRoute';\nimport AppRoute from './AppRoute';\n\nexport default function() {\n  return (\n    <BrowserRouter basename=\"/lattice\">\n      <Switch>\n        <Route path=\"/auth/register/:registrantId\">\n          <AuthRoute>\n            <Register />\n          </AuthRoute>\n        </Route>\n        <Route path=\"/auth/login\">\n          <AuthRoute>\n            <Login />\n          </AuthRoute>\n        </Route>\n        <Route path=\"/auth/reset\">\n          <AuthRoute>\n            <ForgotPassword />\n          </AuthRoute>\n        </Route>\n        <Route path=\"/notifications\">\n          <AppRoute>\n            <Notifications />\n          </AppRoute>\n        </Route>\n        <Route path=\"/profile/edit\">\n          <AppRoute>\n            <ChangeProfile />\n          </AppRoute>\n        </Route>\n        <Route path=\"/profile\">\n          <AppRoute>\n            <Profile />\n          </AppRoute>\n        </Route>\n        <Route path=\"/\">\n          <AppRoute>\n            <Home />\n          </AppRoute>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}","import React from 'react';\nimport Providers from './Providers';\nimport Routes from './Routes';\n\nexport default function() {\n  return <>\n    <Providers>\n      <Routes />\n    </Providers>\n  </>;\n}","import React from 'react';\nimport Layout from './layout/Layout';\n\nimport \"./styles/App.scss\"\n\nconst App = () => {\n  return <Layout />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(`root`));\n"],"sourceRoot":""}